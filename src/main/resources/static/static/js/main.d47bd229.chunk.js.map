{"version":3,"sources":["layout/pages/Signup/Register.styles.js","layout/pages/Login/Login.styles.js","components/CardComponents/Sections/Logo/Logo.styles.js","components/CardComponents/Sections/Logo/Logo.js","backend_service/RestApiHandler.js","layout/pages/Signup/Register.js","utils/SessionContext.js","components/Container/LoginContainer.js","layout/pages/Login/Login.js","components/CardComponents/AddingVehicleCard/LicensePlateInput.js","components/CardComponents/AddingVehicleCard/AddingVehicleCard.js","utils/DateFormatter.js","components/CardComponents/ProfileCard/ProfileCard.styles.js","components/CardComponents/BlacklistCard/BlacklistCard.js","components/CardComponents/EmployeeReportCard/EmployeeReportCard.js","components/CardComponents/EmployeeRequestCard/EmployeeRequestCard.js","components/CardComponents/LogCard/LogCard.styles.js","components/CardComponents/LogCard/LogCard.js","components/CardComponents/ParkAreaCard/ParkAreaCard.js","components/CardComponents/ParkingOwnerReportCard/ParkingOwnerReportCard.js","components/CardComponents/FeedbackCard/ParkingOwnerFeedbackCard.js","components/CardComponents/ParkingOwnerVehicleCard/ParkingOwnerVehicleCard.js","components/CardComponents/UserVehicleCard/UserVehicleCard.js","components/CardComponents/UserVehicleReportCard/UserVehicleReportCard.js","components/Contents/Contents.js","components/CardComponents/Sections/Header/Header.styles.js","components/CardComponents/Sections/Header/Header.js","utils/MenuItems.js","components/CardComponents/Sections/SearchBar/SearchBar.styles.js","components/CardComponents/Sections/SearchBar/SearchBar.js","components/Logout/Logout.js","components/CardComponents/ProfileCard/ProfileCard.js","layout/pages/Wrapper.js","components/CardComponents/FeedbackCard/FeedbackCard.js","layout/pages/User/UserPage.js","layout/pages/Employee/EmployeePage.js","layout/pages/ParkingOwner/ParkingOwnerPage.js","config/Router.js","utils/PrivateRoute.js","components/Container/Container.styles.js","components/Container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","WelcomeContainer","Title","ProfileCard","img","Logo","src","auth_configuration","headers","authorization","instance","axios","create","baseURL","getParkingOwners","get","getParkings","getBlacklist","getEmployees","getEntranceExitLogs","deleteEntranceExitLog","vehicleId","delete","getParkAreas","updateParkArea","parkAreaId","parkArea","put","getReportList","deleteReportListItem","getUsers","getVehicles","createVehicle","vehicle","post","deleteVehicle","Register","history","useHistory","useState","success","setSuccess","users","setUsers","employees","setEmployees","parkingOwners","setParkingOwners","firstName","setFirstName","lastName","setLastName","phone","setPhone","userName","setUserName","password","setPassword","alreadyTaken","setAlreadyTaken","selectedParking","setSelectedParking","isChecked","setChecked","firstNameError","setFirstNameError","lastNameError","setLastNameError","phoneError","setPhoneError","userNameError","setUserNameError","passwordError","setPasswordError","parkingError","setParkingError","parkingLoading","setParkingLoading","createLoading","setCreateLoading","modalOpen","setModalOpen","successErrorModalOpen","setSuccessErrorModalOpen","error","setError","parkings","setParkings","parkingOptions","setParkingOptions","useEffect","a","data","map","parking","index","key","text","name","value","init","modalOKButtonHandler","createPerson","parkingId","find","id","fullName","accepted","employee","user","setTimeout","push","Grid","stackable","Column","width","Modal","dimmer","open","onClose","Content","Message","negative","positive","header","Actions","Button","onClick","Placeholder","Line","length","toString","Form","size","Group","widths","Input","onChange","event","test","required","fluid","label","placeholder","type","Field","loading","control","Select","options","search","Checkbox","slider","checked","animated","primary","disabled","some","toLowerCase","parkingOwner","visible","hidden","Icon","Header","style","color","warning","href","SessionContext","React","createContext","setUser","authenticated","setAuthenticated","Login","useContext","username","setUsername","loginError","setLoginError","setLoading","serverError","setServerError","requestWaiting","setRequestWaiting","class","alt","height","className","icon","iconPosition","preventDefault","window","btoa","verticalAlign","content","as","Link","to","LicensePlateInput","licensePlate","handleLicensePlateChange","licensePlateError","AddingVehicleCard","vehicles","updateVehicles","blacklist","setLicensePlateError","alreadyError","setAlreadyError","inBlacklistError","setInBlacklistError","setLicensePlate","createError","setCreateError","Number","vehicleType","values","setValues","checkedLisencePlate","trim","replace","toUpperCase","userId","Card","textAlign","Divider","Description","Dropdown","selection","result","target","marginBottom","marginTop","extra","basic","element","split","isNaN","DateFormatter","date","formatter","number","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","WordBreaker","BlacklistCard","updateBlacklist","removeLoading","setRemoveLoading","removeOnClickHandle","blacklistId","Date","EmployeeReportCard","reports","updateReports","reason","setReason","reasonError","setReasonError","alreadyReported","setAlreadyReported","reportLoading","setReportLoading","parkingName","reportCarOnClickHandle","report","reportReason","active","reportList","employeeId","console","log","EmployeeRequestCard","updateEmployees","acceptOnClickHandle","rejectOnClickHandle","Log","LogCard","border","borderColor","exitTime","entranceTime","parkAreaNumber","ParkAreaCard","setCarError","selectedCar","allLogs","entranceExitLoading","setEntranceExit","handleParkHereOnClick","full","entranceExitLog","handleExitOnClick","logId","entranceExitLogId","ParkingOwnerReportCard","parkAreas","rejectLoading","setRejectLoading","blacklistLoading","setBlacklistLoading","reportListId","addBlacklistOnClickHandle","area","areaToUpdate","ParkingOwnerFeedbackCard","feedbacks","feedbackLeft","feedback","ParkingOwnerVehicleCard","UserVehicleCard","setListedVehicleId","setListLogs","setListReports","deleteCarLoading","setDeleteCarLoading","deleteCarClickHandler","UserVehicleReportCard","Contents","contents","getContent","deleteFeedback","sort","content1","content2","menuItems","activeMenu","handleHeaderOnClick","Menu","inverted","pointing","item","Item","input","SearchBar","userInput","Logout","handleOnClick","person","fullname","registrationDate","ContainerFields","FeedbackCard","updateFeedbacks","centered","TextArea","UserPage","setVehicles","allVehicles","setAllVehicles","setParkAreas","selectedParkingParkAreas","setSelectedParkingParkAreas","listLogs","setPlaceholder","vehicleLogs","setVehicleLogs","setBlacklist","setAllLogs","listReports","vehicleReports","setVehicleReports","listedVehicleId","currentParkId","setCurrentParkId","setUserInput","setActiveMenu","setSelectedCar","carError","carOptions","setCarOptions","contextRef","createRef","filter","fullAreaVehicles","includes","getParkAreasBySelectedCar","getParkAreasBySelectedParking","getListedVehicleLogs","getListedVehicleReports","update","handleOnChange","Ref","innerRef","Sticky","context","marginLeft","Visibility","indexOf","EmployeePage","setReports","logs","setLogs","handleSearhOnChange","startingDate","getFilteredCars","filteredVehicles","getFilteredLogs","ParkingOwnerPage","setParkingName","parkingNameError","setParkingNameError","parkAreaCount","setParkAreaCount","parkAreaCountError","setParkAreaCountError","alreadyExistError","setAlreadyExistError","setFeedbacks","currentParkingId","setCurrentParkingId","ownerId","areas","getFilteredReports","updateParkings","handleSearchOnChange","createOnClickHandle","getFilteredEmployees","getFilteredVehicles","slice","floated","routes","path","exact","component","isPrivate","Route","require","PrivateRoute","children","isAuthenticated","rest","render","location","Container","pathname","route","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d47bd229.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    margin:2% 20% 0 20%;\r\n    border-radius:1em;\r\n    box-shadow: 3px 3px 3px 3px #888888;\r\n    padding:1%;\r\n    background-color:white;\r\n`\r\n\r\nexport const Title = styled.div`\r\n    text-align:center;\r\n    color:#FB1D07;\r\n    font-weight:bold;\r\n    font-size:50px;\r\n    margin-top:3%;\r\n    line-height:50px;\r\n    word-wrap:break-word;\r\n    word-break:break-word;\r\n`","import styled from 'styled-components';\r\n\r\nexport const WelcomeContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 2.5fr 2fr;\r\n    background: linear-gradient(to bottom, rgb(6, 108, 224),  rgb(14, 48, 122));\r\n    width: 1100px;\r\n    height: 530px;\r\n    margin: 4% auto;;\r\n    border-radius: 15px;\r\n    -webkit-backface-visibility : hidden; /* the magic ingredient */\r\n    -webkit-transform           : skew(26deg, 0);\r\n`\r\n\r\nexport const LoginContainer = styled.div`\r\n    text-align: center;\r\n    margin: 3% 5% 3% 8%;\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    padding: 0px 50px 30px 30px;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 1200px;\r\n    background: #fff;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -moz-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    padding: 200px 50px 60px 30px;\r\n    margin: 5px;\r\n`\r\n\r\nexport const Title = styled.div`\r\n    text-align:center;\r\n    font-weight:bold;\r\n    font-size:60px;\r\n    margin-top:2%;\r\n    line-height:10px;\r\n    word-wrap:break-word;\r\n    word-break:break-word;\r\n    color: #e0dfdc;\r\n    letter-spacing: .1em;\r\n    text-shadow: \r\n      0 -1px 0 #fff, \r\n      0 1px 0 #2e2e2e, \r\n      0 2px 0 #2c2c2c, \r\n      0 3px 0 #2a2a2a, \r\n      0 4px 0 #282828, \r\n      0 22px 30px rgba(0, 0, 0, 0.9);\r\n`\r\nexport const ProfileCard = styled.img`\r\n    -webkit-transform           : skew(-26deg, 0);\r\n    width: 96px;\r\n    height: 96px;\r\n    margin: 0 auto 10px;\r\n    display: block;\r\n    -moz-border-radius: 50%;\r\n    -webkit-border-radius: 50%;\r\n    borderWidth: 3;\r\n    borderColor: \"blue\";\r\n    border-radius: 50%;\r\n`\r\n\r\nexport const ContentHolder = styled.img`\r\n    text-align: center;\r\n    color: white;\r\n    font-size: 15px;\r\n    font-weight: lighter;\r\n    letter-spacing: 1px;\r\n    margin-top: 15%;\r\n    padding: 50px;\r\n    -webkit-transform: skew(-26deg, 0);\r\n`\r\n\r\nexport const ContentText = styled.img`\r\n    font-size: 38px;\r\n    margin: 20px auto;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.img`\r\n    border-radius: 50%;\r\n    height:75px;\r\n    width:75px;\r\n`","import React from 'react'\r\nimport { Wrapper } from './Logo.styles'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <Wrapper src=\"logo256.png\"></Wrapper>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import axios from \"axios\";\r\n\r\nconst auth_configuration = {\r\n  headers: {\r\n    authorization: \"Basic dXNlcjo3Y01fekM0Xg==\",\r\n  },\r\n};\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://parkingapps.herokuapp.com/api\",\r\n});\r\n\r\n//parking_owner\r\n\r\nexport const getParkingOwners = () => {\r\n  return instance.get(\"/parking_owner\", auth_configuration);\r\n};\r\n\r\n//parking\r\n\r\nexport const getParkings = () => {\r\n  return instance.get(\"/parking\", auth_configuration);\r\n};\r\n\r\nexport const createParking = (parking) => {\r\n  return instance.post(\"/parking\", parking, auth_configuration);\r\n};\r\n\r\n//feedback\r\nexport const getFeedback = () => {\r\n  return instance.get(\"/feedback\", auth_configuration);\r\n};\r\n\r\nexport const createFeedback = (feedback) => {\r\n  return instance.post(\"/feedback\", feedback, auth_configuration);\r\n};\r\n\r\nexport const deleteFeedback = (feedbackId) => {\r\n  return instance.delete(`/feedback/${feedbackId}`, auth_configuration);\r\n};\r\n//blacklist\r\n\r\nexport const getBlacklist = () => {\r\n  return instance.get(\"/blacklist\", auth_configuration);\r\n};\r\n\r\nexport const createBlacklistItem = (blacklist) => {\r\n  return instance.post(\"/blacklist\", blacklist, auth_configuration);\r\n};\r\n\r\nexport const deleteBlacklistItem = (blacklistId) => {\r\n  return instance.delete(`/blacklist/${blacklistId}`, auth_configuration);\r\n};\r\n\r\n//employees\r\n\r\nexport const getEmployees = () => {\r\n  return instance.get(\"/employees\", auth_configuration);\r\n};\r\n\r\nexport const createEmployee = (employee) => {\r\n  return instance.post(\"/employees\", employee, auth_configuration);\r\n};\r\n\r\nexport const updateEmployee = (employeeId, employee) => {\r\n  return instance.put(`/employees/${employeeId}`, employee, auth_configuration);\r\n};\r\n\r\nexport const deleteEmployee = (employeeId) => {\r\n  return instance.delete(`/employees/${employeeId}`, auth_configuration);\r\n};\r\n\r\n//entrance_exit_log\r\n\r\nexport const getEntranceExitLogs = () => {\r\n  return instance.get(\"/entrance_exit_log\", auth_configuration);\r\n};\r\n\r\nexport const createEntranceExitLog = (entranceExitLog) => {\r\n  return instance.post(\"/entrance_exit_log\", entranceExitLog, auth_configuration);\r\n};\r\n\r\nexport const updateEntranceExitLog = (entranceExitLogId, entranceExitLog) => {\r\n  return instance.put(\r\n    `/entrance_exit_log/${entranceExitLogId}`,\r\n    entranceExitLog,\r\n    auth_configuration\r\n  );\r\n};\r\n\r\nexport const deleteEntranceExitLog = (vehicleId) => {\r\n  return instance.delete(`/entrance_exit_log/${vehicleId}`, auth_configuration);\r\n};\r\n\r\n//park_area\r\n\r\nexport const getParkAreas = () => {\r\n  return instance.get(\"/park_area\", auth_configuration);\r\n};\r\n\r\nexport const updateParkArea = (parkAreaId, parkArea) => {\r\n  return instance.put(`/park_area/${parkAreaId}`, parkArea, auth_configuration);\r\n};\r\n\r\n//report_list\r\n\r\nexport const getReportList = () => {\r\n  return instance.get(\"/report_list\", auth_configuration);\r\n};\r\n\r\nexport const createReportListItem = (reportList) => {\r\n  return instance.post(\"/report_list\", reportList, auth_configuration);\r\n};\r\n\r\nexport const updateReportListItem = (reportListId, reportList) => {\r\n  return instance.put(`/report_list/${reportListId}`, reportList, auth_configuration);\r\n};\r\n\r\nexport const deleteReportListItem = (vehicleId) => {\r\n  return instance.delete(`/report_list/${vehicleId}`, auth_configuration);\r\n};\r\n\r\n//users\r\n\r\nexport const getUsers = () => {\r\n  return instance.get(\"/users\", auth_configuration);\r\n};\r\n\r\nexport const createUser = (user) => {\r\n  return instance.post(\"/users\", user, auth_configuration);\r\n};\r\n\r\n//vehicles\r\n\r\nexport const getVehicles = () => {\r\n  return instance.get(\"/vehicles\", auth_configuration);\r\n};\r\n\r\nexport const createVehicle = (vehicle) => {\r\n  return instance.post(\"/vehicles\", vehicle, auth_configuration);\r\n};\r\n\r\nexport const deleteVehicle = (vehicleId) => {\r\n  return instance.delete(`/vehicles/${vehicleId}`, auth_configuration);\r\n};\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Wrapper } from './Register.styles'\r\nimport {\r\n    Button,\r\n    Checkbox,\r\n    Form,\r\n    Grid,\r\n    Icon,\r\n    Message,\r\n    Modal,\r\n    Placeholder,\r\n    Select\r\n} from 'semantic-ui-react'\r\nimport { Title } from '../Login/Login.styles'\r\nimport Logo from '../../../components/CardComponents/Sections/Logo/Logo'\r\nimport { getParkings, createUser, getUsers, getEmployees, getParkingOwners, createEmployee } from '../../../backend_service/RestApiHandler'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Register = () => {\r\n    const history = useHistory();\r\n    const [success, setSuccess] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [parkingOwners, setParkingOwners] = useState([]);\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [alreadyTaken, setAlreadyTaken] = useState(\"\");\r\n    const [selectedParking, setSelectedParking] = useState(\"\");\r\n    const [isChecked, setChecked] = useState(false);\r\n    const [firstNameError, setFirstNameError] = useState(false);\r\n    const [lastNameError, setLastNameError] = useState(false);\r\n    const [phoneError, setPhoneError] = useState(false);\r\n    const [userNameError, setUserNameError] = useState(false);\r\n    const [passwordError, setPasswordError] = useState(false);\r\n    const [parkingError, setParkingError] = useState(false);\r\n    const [parkingLoading, setParkingLoading] = useState(false);\r\n    const [createLoading, setCreateLoading] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [successErrorModalOpen, setSuccessErrorModalOpen] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [parkings, setParkings] = useState([]);\r\n    const [parkingOptions, setParkingOptions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setParkingLoading(true);\r\n        const init = async () => {\r\n            try {\r\n                let { data } = await getParkings();\r\n                setParkings(data);\r\n                data = data.map((parking, index) => { return { key: index, text: parking.name, value: parking.name } })\r\n                setParkingOptions(data);\r\n                setParkingLoading(false);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n\r\n            try {\r\n                const { data } = await getUsers();\r\n                setUsers(data);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n\r\n            try {\r\n                const { data } = await getEmployees();\r\n                setEmployees(data);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n\r\n            try {\r\n                const { data } = await getParkingOwners();\r\n                setParkingOwners(data);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n            setParkingLoading(false);\r\n        }\r\n        init();\r\n    }, [])\r\n\r\n    const handleFirstNameChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z]+$/.test(value) || value === '') && value.length < 25) {\r\n            setFirstName(value);\r\n            if (firstNameError)\r\n                setFirstNameError(false);\r\n        }\r\n    }\r\n\r\n    const handleLastNameChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z]+$/.test(value) || value === '') && value.length < 25) {\r\n            setLastName(value);\r\n            if (lastNameError)\r\n                setLastNameError(false);\r\n        }\r\n    }\r\n\r\n    const handlePhoneChange = (event, { value }) => {\r\n        if ((/^[0-9]+$/.test(value) || value === '') && value.length < 11 && value !== \"0\") {\r\n            setPhone(value);\r\n            if (phoneError)\r\n                setPhoneError(false);\r\n        }\r\n    }\r\n\r\n    const handleUserNameChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z0-9]+$/.test(value) || value === '') && value.length < 25) {\r\n            setUserName(value);\r\n            if (userNameError)\r\n                setUserNameError(false);\r\n        }\r\n    }\r\n\r\n    const handlePasswordChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z0-9]+$/.test(value) || value === '') && value.length < 25) {\r\n            setPassword(value);\r\n            if (passwordError)\r\n                setPasswordError(false);\r\n        }\r\n    }\r\n\r\n    const dropdownOnChangeHandler = (event, { value }) => {\r\n        setSelectedParking(value);\r\n        setParkingError(false);\r\n    }\r\n\r\n    const checkboxOnChange = () => {\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const onClickHandler = () => {\r\n        if (firstName.length < 3)\r\n            setFirstNameError(true);\r\n        else if (lastName.length < 3)\r\n            setLastNameError(true);\r\n        else if (phone.length < 10)\r\n            setPhoneError(true);\r\n        else if (userName.length < 5)\r\n            setUserNameError(true);\r\n        else if (password.length < 5)\r\n            setPasswordError(true);\r\n        else if (selectedParking === '')\r\n            setParkingError(true);\r\n        else {\r\n            if (users.some((user) => user.userName.toLowerCase() === userName.toLowerCase()) ||\r\n                employees.some((employee) => employee.userName.toLowerCase() === userName.toLowerCase()) ||\r\n                parkingOwners.some((parkingOwner) => parkingOwner.userName.toLowerCase() === userName.toLowerCase())) {\r\n                setAlreadyTaken(\"Username\");\r\n                setSuccessErrorModalOpen(true);\r\n            } else if (users.some((user) => user.phone === phone) ||\r\n                employees.some((employee) => employee.phone === phone) ||\r\n                parkingOwners.some((parkingOwner) => parkingOwner.phone === phone)) {\r\n                setAlreadyTaken(\"Phone\")\r\n                setSuccessErrorModalOpen(true);\r\n            } else {\r\n                setModalOpen(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const modalOKButtonHandler = async () => {\r\n        let createPerson = {\r\n            parkingId: parkings.find((parking) => parking.name === selectedParking).id,\r\n            fullName: `${firstName} ${lastName}`,\r\n            userName: userName,\r\n            password: password,\r\n            phone: phone\r\n        };\r\n        if (isChecked) {\r\n            createPerson = { accepted: false, ...createPerson };\r\n            try {\r\n                setCreateLoading(true);\r\n                await createEmployee(createPerson);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n        } else {\r\n            try {\r\n                await createUser(createPerson);\r\n                setCreateLoading(false);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n        }\r\n        setModalOpen(false);\r\n        setSuccessErrorModalOpen(true);\r\n        setFirstName('');\r\n        setLastName('');\r\n        setPhone('');\r\n        setUserName('');\r\n        setPassword('');\r\n        setSelectedParking('');\r\n        setSuccess(true);\r\n        setChecked(false);\r\n        setAlreadyTaken(\"\");\r\n        setTimeout(() => {\r\n            history.push(\"/login\");\r\n            setSuccess(false);\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Logo />\r\n            <Grid stackable>\r\n                <Grid.Column width=\"16\">\r\n                    <Title>Create your account</Title>\r\n                </Grid.Column>\r\n                <Grid.Column width=\"16\">\r\n                    <Wrapper>\r\n                        <Modal\r\n                            dimmer=\"blurring\"\r\n                            open={successErrorModalOpen}\r\n                            onClose={() => setSuccessErrorModalOpen(false)}\r\n                        >\r\n                            <Modal.Content>\r\n                                <Message negative={!success} positive={success} header={\r\n                                    success ? \"Your account created successfully. You'll be redirect to login page in 3 seconds.\"\r\n                                        : alreadyTaken === \"Username\" ? \"This Username is already in use\"\r\n                                            : alreadyTaken === \"Phone\" ? \"This Phone is already in use\"\r\n                                                : null\r\n                                } />\r\n                            </Modal.Content>\r\n                            <Modal.Actions>\r\n                                {alreadyTaken === \"Username\" || alreadyTaken === \"Phone\" ?\r\n                                    <Button negative onClick={() => setSuccessErrorModalOpen(false)}>\r\n                                        OK!\r\n                                </Button>\r\n                                    : null\r\n                                }\r\n                            </Modal.Actions>\r\n                        </Modal>\r\n\r\n                        {parkingLoading ?\r\n                            <Placeholder>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder>\r\n                            : parkings.length === 0 && !error ?\r\n                                <Message negative header=\"There is no parking. You can't register.\" />\r\n                                : error ?\r\n                                    <Message negative>{error.toString()}</Message>\r\n                                    :\r\n                                    <>\r\n                                        <Form size=\"big\">\r\n                                            <Form.Group widths=\"equal\">\r\n                                                <Form.Input\r\n                                                    onChange={handleFirstNameChange}\r\n                                                    value={firstName}\r\n                                                    required\r\n                                                    fluid\r\n                                                    label=\"First name\"\r\n                                                    placeholder=\"First name (between 2-24 letter)\"\r\n                                                    error={firstNameError}\r\n                                                />\r\n                                                <Form.Input\r\n                                                    onChange={handleLastNameChange}\r\n                                                    value={lastName}\r\n                                                    required\r\n                                                    fluid\r\n                                                    label=\"Last name\"\r\n                                                    placeholder=\"Last name (between 2-24 letter)\"\r\n                                                    error={lastNameError}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Input\r\n                                                onChange={handlePhoneChange}\r\n                                                value={phone}\r\n                                                required\r\n                                                label=\"Phone\"\r\n                                                placeholder=\"Phone (Length should be 10)\"\r\n                                                error={phoneError}\r\n                                            />\r\n                                            <Form.Input\r\n                                                onChange={handleUserNameChange}\r\n                                                value={userName}\r\n                                                required\r\n                                                label=\"Username\"\r\n                                                placeholder=\"Username (between 5-24 letter)\"\r\n                                                error={userNameError}\r\n                                            />\r\n                                            <Form.Input\r\n                                                onChange={handlePasswordChange}\r\n                                                value={password}\r\n                                                required\r\n                                                label=\"Password\"\r\n                                                placeholder=\"Password (between 5-24 letter)\"\r\n                                                type=\"password\"\r\n                                                error={passwordError}\r\n                                            />\r\n                                            <Form.Field\r\n                                                fluid\r\n                                                loading={parkingLoading}\r\n                                                value={selectedParking}\r\n                                                onChange={dropdownOnChangeHandler}\r\n                                                required\r\n                                                control={Select}\r\n                                                options={parkingOptions}\r\n                                                label=\"Choose Parking\"\r\n                                                placeholder='Choose Parking'\r\n                                                search\r\n                                                error={parkingError}\r\n                                            />\r\n                                            <Form.Field>\r\n                                                <Checkbox slider label='Do you want to work in this parking?' onChange={checkboxOnChange} checked={isChecked} />\r\n                                            </Form.Field>\r\n                                            <Button\r\n                                                loading={createLoading}\r\n                                                animated\r\n                                                fluid\r\n                                                primary\r\n                                                disabled={firstNameError || lastNameError || phoneError || userNameError || passwordError || parkingError ? true : false}\r\n                                                onClick={onClickHandler}\r\n                                            >\r\n                                                <Button.Content visible>\r\n                                                    Sign in\r\n                                </Button.Content>\r\n                                                <Button.Content hidden>\r\n                                                    <Icon name=\"signup\" />\r\n                                                </Button.Content>\r\n                                            </Button>\r\n                                        </Form>\r\n                                        <Modal\r\n                                            dimmer=\"blurring\"\r\n                                            open={modalOpen}\r\n                                            onClose={() => setModalOpen(false)}\r\n                                        >\r\n                                            <Modal.Header>Are you sure the information is correct?</Modal.Header>\r\n                                            <Modal.Content>\r\n                                                <h3>\r\n                                                    First name: <i style={{ color: \"red\" }}>{firstName}</i><br />\r\n                                            Last name: <i style={{ color: \"red\" }}>{lastName}</i><br />\r\n                                            Phone: <i style={{ color: \"red\" }}>{phone}</i><br />\r\n                                            Username: <i style={{ color: \"red\" }}>{userName}</i><br />\r\n                                            Selected Parking: <i style={{ color: \"red\" }}>{selectedParking}</i><br />\r\n                                            User Type: <i style={{ color: \"red\" }}>{isChecked ? \"Employee\" : \"User\"}</i>\r\n                                                </h3>\r\n                                            </Modal.Content>\r\n                                            <Modal.Actions>\r\n                                                <Button negative onClick={() => setModalOpen(false)}>\r\n                                                    Nope, something wrong!\r\n                                    </Button>\r\n                                                <Button positive onClick={modalOKButtonHandler}>\r\n                                                    All fine.\r\n                                    </Button>\r\n                                            </Modal.Actions>\r\n                                        </Modal>\r\n                                    </>\r\n                        }\r\n                        {\r\n                            !error ?\r\n                                <Message warning>\r\n                                    <Icon name='user' />\r\n                            Already have an account?&nbsp;<a href='/login'>Login here</a>&nbsp;instead.\r\n                        </Message>\r\n                                :\r\n                                null\r\n                        }\r\n                    </Wrapper>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react';\r\n\r\nconst SessionContext = React.createContext({\r\n    user: {},\r\n    setUser: () => { },\r\n\r\n    authenticated: '',\r\n    setAuthenticated: () => { }\r\n})\r\n\r\nexport default SessionContext;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display:inline-block;\r\n    background-image: url(\"https://d32pcgkv1ookv1.cloudfront.net/prod-wpms/wp-content/uploads/sites/37/2018/05/20200325/parking-lot.jpg\");\r\n    background-attachment: fixed;\r\n    background-repeat:no-repeat;\r\n    background-size:cover;\r\n    width:100%;\r\n    min-height:100vh;\r\n`\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './Login.css'\r\nimport { Button, Form, Grid, Icon, Message, Modal, Placeholder } from 'semantic-ui-react'\r\nimport Logo from '../../../components/CardComponents/Sections/Logo/Logo'\r\nimport { getEmployees, getParkingOwners, getUsers } from '../../../backend_service/RestApiHandler'\r\nimport { WelcomeContainer, ProfileCard, Title } from './Login.styles'\r\nimport SessionContext from '../../../utils/SessionContext'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Wrapper } from '../../../components/Container/LoginContainer'\r\n\r\nconst Login = () => {\r\n    const { setAuthenticated, setUser } = useContext(SessionContext);\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [loginError, setLoginError] = useState(false);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [serverError, setServerError] = useState(\"\");\r\n    const [users, setUsers] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const [parkingOwners, setParkingOwners] = useState([]);\r\n    const [requestWaiting, setRequestWaiting] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            setLoading(true);\r\n\r\n            try {\r\n                const { data } = await getUsers();\r\n                setUsers(data);\r\n            } catch (err) {\r\n                setServerError(err);\r\n            }\r\n\r\n            try {\r\n                const { data } = await getEmployees();\r\n                setEmployees(data);\r\n            } catch (err) {\r\n                setServerError(err);\r\n            }\r\n\r\n            try {\r\n                const { data } = await getParkingOwners();\r\n                setParkingOwners(data);\r\n            } catch (err) {\r\n                setServerError(err);\r\n            }\r\n            setLoading(false);\r\n        }\r\n        init();\r\n\r\n    }, [])\r\n\r\n    const handleUsernameChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z0-9]+$/.test(value) || value === '') && value.length < 25) {\r\n            setUsername(value);\r\n            if (requestWaiting)\r\n                setRequestWaiting(false);\r\n            if (loginError)\r\n                setLoginError(false);\r\n        }\r\n    }\r\n\r\n    const handlePasswordChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z0-9]+$/.test(value) || value === '') && value.length < 25) {\r\n            setPassword(value);\r\n            if (loginError)\r\n                setLoginError(false);\r\n            if (requestWaiting)\r\n                setRequestWaiting(false);\r\n        }\r\n    }\r\n\r\n    const handleSigninOnClick = (event) => {\r\n        event.preventDefault();\r\n        if (users.some((user) => user.userName === username && user.password === window.btoa(password))) {\r\n            setUser(users.find((user) => user.userName === username && user.password === window.btoa(password)))\r\n            setAuthenticated('User');\r\n            history.push(\"/user\");\r\n        } else if (employees.some((employee) => employee.userName === username && employee.password === window.btoa(password) && employee.accepted)) {\r\n            setUser(employees.find((employee) => employee.userName === username && employee.password === window.btoa(password) && employee.accepted))\r\n            setAuthenticated('Employee');\r\n            history.push(\"/employee\");\r\n        } else if (parkingOwners.some((parkingOwner) => parkingOwner.userName === username && parkingOwner.password === window.btoa(password))) {\r\n            setUser(parkingOwners.find((parkingOwner) => parkingOwner.userName === username && parkingOwner.password === window.btoa(password)))\r\n            setAuthenticated('ParkingOwner');\r\n            history.push(\"/parkingowner\");\r\n        } else if (employees.some((employee) => employee.userName === username && employee.password === window.btoa(password) && !employee.accepted)) {\r\n            setRequestWaiting(true);\r\n            setModalOpen(true);\r\n        } else {\r\n            setLoginError(true);\r\n            setModalOpen(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Wrapper>\r\n            <Logo />\r\n            <Grid stackable>\r\n                <Grid.Column width=\"16\">\r\n                    <Title>Паркинг система</Title>\r\n                </Grid.Column>\r\n            </Grid>\r\n            <WelcomeContainer>\r\n                <div class=\"box-1\">\r\n                    <div class=\"content-holder\">\r\n                        <h2>Добре дошли на нашия уеб сайт!</h2>\r\n                        <img src=\"https://www.pngarts.com/files/6/Parking-Logo-PNG-Image.png\" alt=\"Girl in a jacket\" width=\"150\" height=\"150\"></img>\r\n                    </div>\r\n                </div>\r\n                <div class=\"box-2\">\r\n                    <div class=\"login-form-container\">\r\n                        <ProfileCard\r\n                            img src=\"https://www.iconpacks.net/icons/1/free-user-login-icon-305-thumb.png\"\r\n                            alt=\"profile-img\"\r\n                        />\r\n                        {!loading && !serverError ?\r\n                            <Form size=\"big\" >\r\n                                <Form.Input className=\"input-field\"\r\n                                    value={username}\r\n                                    icon='user'\r\n                                    iconPosition='left'\r\n                                    label='Username'\r\n                                    placeholder=\"Username (max 24)\"\r\n                                    onChange={handleUsernameChange}\r\n                                /> \r\n                                <Form.Input className=\"input-field\"\r\n                                    value={password}\r\n                                    icon='lock'\r\n                                    iconPosition='left'\r\n                                    label='Password'\r\n                                    type='password'\r\n                                    placeholder=\"Password (max 24)\"\r\n                                    onChange={handlePasswordChange}\r\n                                />\r\n                                <Button\r\n                                    primary\r\n                                    animated\r\n                                    size='big'\r\n                                    onClick={handleSigninOnClick}\r\n                                >\r\n                                    <Button.Content visible>Вход</Button.Content>\r\n                                    <Button.Content hidden><Icon name=\"sign-in\" /></Button.Content>\r\n                                </Button>\r\n                            </Form>\r\n                            : !serverError ?\r\n                                <Placeholder>\r\n                                    <Placeholder.Line />\r\n                                    <Placeholder.Line />\r\n                                    <Placeholder.Line />\r\n                                    <Placeholder.Line />\r\n                                    <Placeholder.Line />\r\n                                </Placeholder>\r\n                                :\r\n                                <Message negative>{serverError.toString()}</Message>\r\n                        }\r\n                    <Grid.Column verticalAlign='middle'>\r\n                        <br />\r\n                    <h3>Несте регистриран потребител?</h3>\r\n                    <Button content='Регистрация' icon='signup' size='big' as={Link} to=\"/register\" />\r\n                    </Grid.Column>\r\n                </div>\r\n            </div>\r\n\r\n            <Modal\r\n                dimmer=\"blurring\"\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n            >\r\n                <Modal.Header>\r\n                    {loginError ?\r\n                        <Message\r\n                            negative\r\n                            header='Wrong username or password'\r\n                        />\r\n                        : requestWaiting ?\r\n                            <Message\r\n                                negative\r\n                                header='Your job request is waiting to accept by parking owner. '\r\n                            />\r\n                            : null\r\n                    }</Modal.Header>\r\n                <Modal.Actions>\r\n                    <Button negative onClick={() => setModalOpen(false)}>\r\n                        OK!\r\n                    </Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n            </WelcomeContainer>\r\n            </Wrapper>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { Form } from 'semantic-ui-react'\r\n\r\nconst LicensePlateInput = ({ licensePlate, handleLicensePlateChange, licensePlateError }) => {\r\n    return (\r\n        <Form.Input\r\n            data-testid=\"licensePlateInput\"\r\n            value={licensePlate}\r\n            onChange={handleLicensePlateChange}\r\n            required\r\n            icon='car'\r\n            iconPosition='left'\r\n            label='License Plate'\r\n            placeholder='пример: CA 1234 XC'\r\n            error={licensePlateError ? \"Wrong format\" : null}\r\n        />\r\n    )\r\n}\r\n\r\nexport default LicensePlateInput\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button, Card, Divider, Form, Icon, Message, Modal, Select} from 'semantic-ui-react'\r\nimport SessionContext from '../../../utils/SessionContext';\r\nimport { createVehicle, getParkings } from '../../../backend_service/RestApiHandler';\r\nimport LicensePlateInput from './LicensePlateInput';\r\n\r\nconst AddingVehicleCard = ({ vehicles, parkings, updateVehicles, blacklist }) => {\r\n    const [licensePlateError, setLicensePlateError] = useState(false);\r\n    const [alreadyError, setAlreadyError] = useState(false);\r\n    const [inBlacklistError, setInBlacklistError] = useState(false);\r\n    const [licensePlate, setLicensePlate] = useState('');\r\n    const [createError, setCreateError] = useState(\"\");\r\n    const [createLoading, setCreateLoading] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [selectedParking, setSelectedParking] = useState(\"\");\r\n    const [placeholder, setPlaceholder] = useState(\"Select Parking\");\r\n\r\n    const { user } = useContext(SessionContext);\r\n    const parking = parkings.find(parking => Number(parking.id) === Number(user.parkingId));\r\n\r\n    const parkingOptions = parkings.map((parking) => ({\r\n        text: parking.id,\r\n        value: parking.id,\r\n      }));\r\n    const options = [\r\n        { key: \"1\", text: \"Coupe\", value: \"COUPE\" },\r\n        { key: \"2\", text: \"Wagon\", value: \"WAGON\" },\r\n        { key: \"3\", text: \"SUV\", value: \"SUV\" },\r\n        { key: \"4\", text: \"Pickup Truck\", value: \"PICKUPTRUCK\" },\r\n        { key: \"5\", text: \"Sedan\", value: \"SEDAN\" },\r\n        { key: \"6\", text: \"Motorcycle\", value: \"MOTORCYCLE\" }\r\n      ];\r\n\r\n      const [values, setValues] = useState({\r\n        firstName: \"\",\r\n        vehicleType: \"\"\r\n      });\r\n\r\n    const onClickHandler = () => {\r\n        const checkedLisencePlate = licensePlate.trim().replace(/\\s\\s+/g, ' ');\r\n        if (vehicles.some((vehicle) => vehicle.licensePlate.toUpperCase() === checkedLisencePlate.toUpperCase())) {\r\n            setAlreadyError(true);\r\n            setModalOpen(true);\r\n        } else if (blacklist.some(element => element.licensePlate.toUpperCase() === checkedLisencePlate.toUpperCase() &&\r\n            Number(element.parkingId) === Number(parking.id))) {\r\n            setInBlacklistError(true);\r\n            setModalOpen(true);\r\n        } else if (!(/^[a-zA-Z]+$/.test(checkedLisencePlate.split(' ')[0])) ||\r\n            checkedLisencePlate.split(' ')[0].length > 2 ||\r\n            isNaN(checkedLisencePlate.split(' ')[1]) ||\r\n            checkedLisencePlate.split(' ')[1].length > 4 ||\r\n            !(/^[a-zA-Z]+$/.test(checkedLisencePlate.split(' ')[2])) ||\r\n            checkedLisencePlate.split(' ')[2].length > 2\r\n        ) {\r\n            setLicensePlateError(true);\r\n        } else {\r\n            setLicensePlateError(false);\r\n            setModalOpen(true);\r\n        }\r\n    }\r\n\r\n    const selectParkingOnChangeHandler = (event, { value }) => {\r\n        setSelectedParking(value);\r\n      };\r\n\r\n    const handleLicensePlateChange = (event, { value }) => {\r\n        if (value.length < 12)\r\n            setLicensePlate(value);\r\n        if (licensePlateError)\r\n            setLicensePlateError(false);\r\n        if (alreadyError)\r\n            setAlreadyError(false);\r\n        if (inBlacklistError)\r\n            setInBlacklistError(false);\r\n    }\r\n    \r\n    const onChangeVehicleType = (event, result) => {\r\n        const { name, value } = result || event.target;\r\n        setValues({ ...values, [name]: value });\r\n      };\r\n\r\n    const modalOKButtonHandler = async () => {\r\n        const checkedLisencePlate = licensePlate.trim().replace(/\\s\\s+/g, ' ');\r\n        const vehicle = {\r\n            licensePlate: checkedLisencePlate.toUpperCase(),\r\n            vehicleType: values.vehicleType,\r\n            parkingId: selectedParking,\r\n            userId: user.id,\r\n        }\r\n        setCreateLoading(true);\r\n        try {\r\n            await createVehicle(vehicle);\r\n        } catch (err) {\r\n            setCreateError(err);\r\n        }\r\n        try {\r\n            const { data } = await getParkings();\r\n            setSelectedParking(data[0].name);\r\n          } catch (err) {\r\n          }\r\n        setCreateLoading(false);\r\n        updateVehicles();\r\n        setModalOpen(false);\r\n    }\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Content >\r\n                    <Card.Header textAlign=\"center\">Add New Vehicle</Card.Header>\r\n                    <Divider />\r\n                    {!createError ?\r\n                        <Card.Description textAlign=\"center\">\r\n                            <Form size=\"big\">\r\n                                <LicensePlateInput\r\n                                    licensePlate={licensePlate}\r\n                                    handleLicensePlateChange={handleLicensePlateChange}\r\n                                    licensePlateError={licensePlateError}\r\n                                />\r\n                                <Form.Dropdown\r\n                                    placeholder=\"Select vehicle type...\"\r\n                                    name=\"vehicleType\"\r\n                                    label=\"Vehicle Type\"\r\n                                    selection\r\n                                    onChange={onChangeVehicleType}\r\n                                    options={options}\r\n                                    value={values.vehicleType}\r\n                                    />\r\n                                <strong>Parking Number:</strong>\r\n                            </Form>\r\n                            <div style={{ marginBottom: \"1%\", marginTop: \"1%\" }}>\r\n                            <Form.Field\r\n                                value={selectedParking}\r\n                                onChange={selectParkingOnChangeHandler}\r\n                                required\r\n                                control={Select}\r\n                                options={parkingOptions}\r\n                                placeholder={placeholder}\r\n                                search\r\n                            />\r\n                            </div>\r\n                        </Card.Description>\r\n                        :\r\n                        <Message negative>{createError.toString()}</Message>\r\n                    }\r\n\r\n                </Card.Content>\r\n                <Card.Content extra textAlign=\"center\">\r\n                    <Button fluid animated basic color='green' onClick={onClickHandler}>\r\n                        <Button.Content visible>Add</Button.Content>\r\n                        <Button.Content hidden><Icon name=\"add\" /></Button.Content>\r\n                    </Button>\r\n                </Card.Content>\r\n            </Card>\r\n            <Modal\r\n                dimmer=\"blurring\"\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n            >\r\n                <Modal.Header>\r\n                    {\r\n                        alreadyError || inBlacklistError ? \"Something wrong!\"\r\n                            : \"Are you sure?\"\r\n                    }\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    {\r\n                        alreadyError\r\n                            ?\r\n                            <Message\r\n                                negative\r\n                                header='This license plate already declared.'\r\n                            />\r\n                            : inBlacklistError ?\r\n                                <Message\r\n                                    negative\r\n                                    header='This car in black list.'\r\n                                />\r\n                                :\r\n                                <h3>\r\n                                    License Plate: <i style={{ color: \"red\" }}>{licensePlate}</i><br />\r\n                                        Parking: <i style={{ color: \"red\" }}>{parking.name}</i><br />\r\n                                </h3>\r\n                    }\r\n\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button negative onClick={() => setModalOpen(false)}>\r\n                        {\r\n                            alreadyError || inBlacklistError ? \"OK!\"\r\n                                : \"Nope, something wrong\"\r\n                        }\r\n                    </Button>\r\n\r\n                    {\r\n                        alreadyError || inBlacklistError ? null\r\n                            : <Button positive onClick={modalOKButtonHandler} loading={createLoading}>\r\n                                Add my car\r\n                            </Button>\r\n                    }\r\n\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddingVehicleCard\r\n","import React from 'react'\r\n\r\nconst DateFormatter = ({ date }) => {\r\n\r\n    const formatter = (number) => {\r\n        if (number < 10)\r\n            return \"0\" + number;\r\n        else\r\n            return number;\r\n    }\r\n\r\n    return (\r\n        <strong data-testid=\"dateFormatter\">\r\n            {formatter(date.getDate())}.{formatter(date.getMonth() + 1)}.{date.getFullYear()}<br />\r\n            {formatter(date.getHours())}:{formatter(date.getMinutes())}:{formatter(date.getSeconds())}\r\n        </strong>)\r\n}\r\n\r\nexport default DateFormatter\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    background-color:white;\r\n    padding:5%;\r\n    margin-left:12.5%;\r\n    text-align:center;\r\n    box-shadow: 3px 3px 3px 3px #106B54;\r\n    border-radius:5px;\r\n`\r\n\r\nexport const WordBreaker = styled.div`\r\n    word-wrap:break-word;\r\n    word-break:break-word;\r\n    text-align:center;\r\n    font-weight:bold;\r\n    padding:5px;\r\n    width:100%;\r\n    color:#0273B4;\r\n`","import React, { useState } from 'react'\r\nimport { Button, Card, Divider, Icon } from 'semantic-ui-react'\r\nimport { deleteBlacklistItem } from '../../../backend_service/RestApiHandler';\r\nimport DateFormatter from '../../../utils/DateFormatter';\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles'\r\n\r\nconst BlacklistCard = ({ content, updateBlacklist }) => {\r\n    const [removeLoading, setRemoveLoading] = useState(false);\r\n\r\n    const removeOnClickHandle = async () => {\r\n        setRemoveLoading(true);\r\n        try {\r\n            await deleteBlacklistItem(Number(content.id));\r\n            updateBlacklist();\r\n        } catch (err) {\r\n\r\n        }\r\n        setRemoveLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Content >\r\n                <Card.Header textAlign=\"center\">{content.licensePlate}</Card.Header>\r\n                <Divider />\r\n                <Card.Description textAlign=\"center\">\r\n                    <WordBreaker>Block Time <br />\r\n                        <DateFormatter date={new Date(content.date)} />\r\n                    </WordBreaker>\r\n                </Card.Description>\r\n                <Card.Content extra textAlign=\"center\">\r\n                    <Button id={content.id} animated=\"fade\" basic positive onClick={removeOnClickHandle} loading={removeLoading}>\r\n                        <Button.Content visible>Remove from blacklist</Button.Content>\r\n                        <Button.Content hidden><Icon name=\"thumbs up outline\" /></Button.Content>\r\n                    </Button>\r\n                </Card.Content>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default BlacklistCard\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button, Card, Divider, Form, Icon, Message, Modal } from 'semantic-ui-react'\r\nimport SessionContext from '../../../utils/SessionContext';\r\nimport { createReportListItem } from '../../../backend_service/RestApiHandler';\r\n\r\nconst EmployeeReportCard = ({ content, vehicles, parkings, reports, updateReports }) => {\r\n    const { user } = useContext(SessionContext);\r\n    const [reason, setReason] = useState(\"\");\r\n    const [reasonError, setReasonError] = useState(false);\r\n    const [alreadyReported, setAlreadyReported] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [reportLoading, setReportLoading] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const licensePlate = vehicles.find((vehicle) => vehicle.id.toString() === content.vehicleId.toString()).licensePlate;\r\n    const parkingName = parkings.find((parking) => parking.id.toString() === content.parkingId.toString()).name;\r\n\r\n    const handleReasonChange = (event, { value }) => {\r\n        if ((/^[a-zA-Z0-9., ]+$/.test(value) || value === '') && value.length < 50) {\r\n            setReason(value);\r\n            setAlreadyReported(false);\r\n            if (reasonError)\r\n                setReasonError(false);\r\n        }\r\n    }\r\n\r\n    const reportCarOnClickHandle = async () => {\r\n        if (!/^[.,0123456789 ]+$/.test(reason) && !(reason.trim().replace(/\\s\\s+/g, ' ').length < 5)) {\r\n            if (reports.some((report) => report.reportReason.toUpperCase() === reason.toUpperCase() &&\r\n                report.active && Number(report.vehicleId) === Number(content.vehicleId))) {\r\n                setAlreadyReported(true);\r\n                setModalOpen(true);\r\n                setTimeout(() => {\r\n                    setModalOpen(false);\r\n                }, 1000);\r\n            } else {\r\n                setReportLoading(true);\r\n                setSuccess(true);\r\n                setModalOpen(true);\r\n                setTimeout(() => {\r\n                    setModalOpen(false);\r\n                    setSuccess(false);\r\n                }, 1000);\r\n                try {\r\n                    await createReportListItem({\r\n                        parkingId: content.parkingId,\r\n                        vehicleId: content.vehicleId,\r\n                        employeeId: user.id,\r\n                        reportReason: reason.trim().replace(/\\s\\s+/g, ' ').toUpperCase(),\r\n                        active: true\r\n                    });\r\n                    setReason(\"\");\r\n                    updateReports();\r\n                } catch (error) {\r\n                    console.log(error.toString())\r\n                }\r\n                setReportLoading(false);\r\n            }\r\n        } else {\r\n            setReasonError(true);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Content >\r\n                    <Card.Header textAlign=\"center\">{licensePlate}</Card.Header>\r\n                    <Divider />\r\n                    <Card.Description textAlign=\"center\">\r\n                        Parking name <br /> <strong>{parkingName}</strong>\r\n                        <br /><br />\r\n                        <Form size=\"big\">\r\n                            <Form.Input\r\n                                value={reason}\r\n                                error={reasonError}\r\n                                icon='times'\r\n                                iconPosition='left'\r\n                                label='Reason'\r\n                                placeholder=\"Report reason (min. 5)\"\r\n                                onChange={handleReasonChange}\r\n                            />\r\n                        </Form>\r\n                    </Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra textAlign=\"center\">\r\n                    <Button\r\n                        loading={reportLoading}\r\n                        animated=\"fade\"\r\n                        basic\r\n                        color='red'\r\n                        onClick={reportCarOnClickHandle}\r\n                    >\r\n                        <Button.Content visible>Report Car</Button.Content>\r\n                        <Button.Content hidden><Icon name=\"clipboard outline\" /></Button.Content>\r\n                    </Button>\r\n                </Card.Content>\r\n            </Card>\r\n            <Modal\r\n                dimmer=\"blurring\"\r\n                open={modalOpen}\r\n                onClose={() => setModalOpen(false)}\r\n            >\r\n                <Modal.Header>\r\n                    {alreadyReported ?\r\n                        <Message negative color=\"red\" header=\"This car already reported for that reason.\" />\r\n                        : success ? <Message positive header=\"Car reported successfully.\" /> : null\r\n                    }\r\n                </Modal.Header>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeeReportCard\r\n","import React, { useState } from 'react'\r\nimport { Button, Card, Divider, Icon } from 'semantic-ui-react';\r\nimport { deleteEmployee, updateEmployee } from '../../../backend_service/RestApiHandler';\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles';\r\n\r\nconst EmployeeRequestCard = ({ content, updateEmployees }) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const acceptOnClickHandle = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await updateEmployee(Number(content.id), { accepted: true });\r\n        } catch (err) {\r\n        }\r\n        setLoading(false);\r\n        updateEmployees();\r\n    }\r\n\r\n    const rejectOnClickHandle = async () => {\r\n        setLoading(true);\r\n        try {\r\n            await deleteEmployee(Number(content.id));\r\n        } catch (err) {\r\n        }\r\n        setLoading(false);\r\n        updateEmployees();\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Content >\r\n                <Card.Header textAlign=\"center\">{content.fullName}</Card.Header>\r\n                <Divider />\r\n                <Card.Description textAlign=\"center\">\r\n                    <WordBreaker>Phone : <strong>{content.phone}</strong></WordBreaker>\r\n                    <br /><br /><h3>Wants to work with you.</h3>\r\n                </Card.Description>\r\n                <Card.Content extra textAlign=\"center\">\r\n                    <Button.Group>\r\n                        <Button id={content.id} animated=\"fade\" basic positive onClick={acceptOnClickHandle} loading={loading}>\r\n                            <Button.Content visible>Accept</Button.Content>\r\n                            <Button.Content hidden><Icon name=\"thumbs up outline\" /></Button.Content>\r\n                        </Button>\r\n                        <Button id={content.id} animated=\"fade\" basic negative onClick={rejectOnClickHandle} loading={loading}>\r\n                            <Button.Content visible>Reject</Button.Content>\r\n                            <Button.Content hidden><Icon name=\"times\" /></Button.Content>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </Card.Content>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default EmployeeRequestCard","import styled from 'styled-components';\r\n\r\nexport const Log = styled.div`\r\n    color:red;\r\n    font-weight:bold;\r\n`","import React from 'react'\r\nimport { Card, Divider } from 'semantic-ui-react'\r\nimport DateFormatter from '../../../utils/DateFormatter';\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles'\r\nimport { Log } from './LogCard.styles';\r\n\r\nconst LogCard = ({ content, vehicles, parkings }) => {\r\n    return (\r\n        <Card>\r\n            <div style={{ border: \"5px solid\", borderColor: !content.exitTime ? \"greenyellow\" : \"red\" }} >\r\n                <Card.Content >\r\n                    <Card.Header textAlign=\"center\"><strong>\r\n                        {vehicles.find((vehicle) => Number(vehicle.id) === Number(content.vehicleId)).licensePlate}\r\n                    </strong>\r\n                    </Card.Header>\r\n                    <Divider />\r\n                    <Card.Description>\r\n                        <WordBreaker>Vehicle type <Log><strong>\r\n                        {vehicles.find((vehicle) => Number(vehicle.id) === Number(content.vehicleId)).vehicleType}\r\n                    </strong></Log></WordBreaker>\r\n                        <WordBreaker>Parking name  <Log>{parkings.find((parking) => Number(parking.id) === Number(content.parkingId)).name.toUpperCase()}</Log></WordBreaker>\r\n                        <WordBreaker>Entrance Time\r\n                            <Log>\r\n                                <DateFormatter date={new Date(content.entranceTime)}></DateFormatter>\r\n                            </Log>\r\n                        </WordBreaker>\r\n                        <WordBreaker>Exit time\r\n                            <Log>\r\n                                {content.exitTime ?\r\n                                    <>\r\n                                        <DateFormatter date={new Date(content.exitTime)} />\r\n                                    </>\r\n                                    : \"Still inside\"\r\n                                }\r\n                            </Log>\r\n                        </WordBreaker>\r\n                        <WordBreaker>Parking Spot Number  <Log>{content.parkAreaNumber}</Log></WordBreaker>\r\n                    </Card.Description>\r\n                </Card.Content>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LogCard","import React, { useContext, useState } from \"react\";\r\nimport { Button, Card, Divider, Icon, Modal } from \"semantic-ui-react\";\r\nimport SessionContext from \"../../../utils/SessionContext\";\r\nimport {\r\n  createEntranceExitLog,\r\n  updateEntranceExitLog,\r\n  updateParkArea,\r\n} from \"../../../backend_service/RestApiHandler\";\r\nimport { WordBreaker } from \"../ProfileCard/ProfileCard.styles\";\r\n\r\nconst ParkAreaCard = ({\r\n  content,\r\n  vehicles,\r\n  index,\r\n  updateVehicles,\r\n  setCarError,\r\n  selectedCar,\r\n  allLogs,\r\n}) => {\r\n  const { user, authenticated } = useContext(SessionContext);\r\n  const [entranceExitLoading, setEntranceExit] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const onClickHandler = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const handleParkHereOnClick = async () => {\r\n    if (selectedCar !== \"\") {\r\n      const id = vehicles.find(\r\n        (vehicle) => selectedCar === vehicle.licensePlate\r\n      ).id;\r\n      try {\r\n        setEntranceExit(true);\r\n        await updateParkArea(content.id, { vehicleId: id, full: true });\r\n        await createEntranceExitLog({\r\n          vehicleId: id,\r\n          parkingId: content.parkingId,\r\n          parkAreaNumber: Number(index) + 1,\r\n        });\r\n      } catch (error) {}\r\n      updateVehicles();\r\n      setEntranceExit(true);\r\n    } else {\r\n      setCarError(true);\r\n    }\r\n  };\r\n\r\n  const handleExitOnClick = async () => {\r\n    try {\r\n      setEntranceExit(true);\r\n      const logId = allLogs.find(\r\n        (log) =>\r\n          Number(log.vehicleId) === Number(content.vehicleId) && !log.exitTime\r\n      ).id;\r\n      await updateParkArea(content.id, { vehicleId: 0, full: false });\r\n      await updateEntranceExitLog(logId, { exitTime: new Date() });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    updateVehicles();\r\n    setEntranceExit(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <div\r\n          style={{\r\n            border: \"5px solid\",\r\n            borderColor: !content.full ? \"green\" : \"red\",\r\n          }}\r\n        >\r\n          <Card.Content>\r\n            <Card.Header textAlign=\"center\">\r\n              Parking Spot <strong>{index + 1}</strong>\r\n            </Card.Header>\r\n            <Divider />\r\n            <Card.Description textAlign=\"center\">\r\n              <WordBreaker>\r\n                License Plate <br />\r\n                <h2>\r\n                  {content.full &&\r\n                  vehicles.some(\r\n                    (vehicle) =>\r\n                      Number(vehicle.id) === Number(content.vehicleId)\r\n                  ) ? (\r\n                    <>\r\n                      <div style={{ border: \"1px solid red\" }}>\r\n                        {\r\n                          vehicles.find(\r\n                            (vehicle) =>\r\n                              Number(vehicle.id) === Number(content.vehicleId)\r\n                          ).licensePlate\r\n                        }\r\n                        {(() => {\r\n                          if (\r\n                            vehicles.find(\r\n                              (vehicle) =>\r\n                                Number(vehicle.id) === Number(content.vehicleId)\r\n                            ).vehicleType === \"MOTORCYCLE\"\r\n                          ) {\r\n                            return <Icon name=\"motorcycle\" />;\r\n                          } else if (\r\n                            vehicles.find(\r\n                              (vehicle) =>\r\n                                Number(vehicle.id) === Number(content.vehicleId)\r\n                            ).vehicleType === \"PICKUPTRUCK\"\r\n                          ) {\r\n                            return <Icon name=\"truck\" />;\r\n                          } else {\r\n                            return <Icon name=\"car\" />;\r\n                          }\r\n                        })()}\r\n                      </div>\r\n                      <Divider />\r\n                      <div>\r\n                        {\" \"}\r\n                        <h4>\r\n                          Vehicle Type:{\" \"}\r\n                          {\r\n                            vehicles.find(\r\n                              (vehicle) =>\r\n                                Number(vehicle.id) === Number(content.vehicleId)\r\n                            ).vehicleType\r\n                          }\r\n                        </h4>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    \"None\"\r\n                  )}\r\n                </h2>\r\n              </WordBreaker>\r\n            </Card.Description>\r\n            {authenticated === \"User\" ? (\r\n              <Card.Content extra textAlign=\"center\">\r\n                {!content.full ? (\r\n                  <Button\r\n                    fluid\r\n                    animated=\"fade\"\r\n                    positive\r\n                    onClick={onClickHandler}\r\n                    loading={entranceExitLoading}\r\n                  >\r\n                    <Button.Content visible>Park here</Button.Content>\r\n                    <Button.Content hidden>\r\n                      <Icon name=\"add\" />\r\n                    </Button.Content>\r\n                  </Button>\r\n                ) : vehicles.some(\r\n                    (vehicle) =>\r\n                      Number(vehicle.id) === Number(content.vehicleId) &&\r\n                      Number(vehicle.userId) === Number(user.id)\r\n                  ) ? (\r\n                  <Button\r\n                    fluid\r\n                    animated=\"fade\"\r\n                    primary\r\n                    onClick={handleExitOnClick}\r\n                    loading={entranceExitLoading}\r\n                  >\r\n                    <Button.Content visible>Exit</Button.Content>\r\n                    <Button.Content hidden>\r\n                      <Icon name=\"sign-out\" />\r\n                    </Button.Content>\r\n                  </Button>\r\n                ) : (\r\n                  <Button fluid disabled negative>\r\n                    Full\r\n                  </Button>\r\n                )}\r\n              </Card.Content>\r\n            ) : null}\r\n          </Card.Content>\r\n        </div>\r\n      </Card>\r\n      <Modal\r\n        dimmer=\"blurring\"\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n      >\r\n        <Modal.Header>{\"Are you sure?\"}</Modal.Header>\r\n        <Modal.Content>\r\n          {<h3>Do you want to book this parking spot?</h3>}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => setModalOpen(false)}>\r\n            {\"No, take me back\"}\r\n          </Button>\r\n\r\n          {\r\n            <Button\r\n              positive\r\n              onClick={handleParkHereOnClick}\r\n            >\r\n              Park here\r\n            </Button>\r\n          }\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParkAreaCard;\r\n","import React, { useState } from 'react'\r\nimport { Button, Card, Divider, Icon } from 'semantic-ui-react'\r\nimport { createBlacklistItem, deleteEntranceExitLog, deleteReportListItem, deleteVehicle, updateParkArea, updateReportListItem } from '../../../backend_service/RestApiHandler'\r\nimport DateFormatter from '../../../utils/DateFormatter'\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles'\r\n\r\nconst ParkingOwnerReportCard = ({ content, vehicles, parkings, employees, updateReports, parkAreas }) => {\r\n    const [rejectLoading, setRejectLoading] = useState(false);\r\n    const [blacklistLoading, setBlacklistLoading] = useState(false);\r\n\r\n\r\n    const rejectOnClickHandle = async (event) => {\r\n        setRejectLoading(true);\r\n        try {\r\n            await updateReportListItem(content.id, { active: false })\r\n            updateReports();\r\n        } catch (err) {\r\n\r\n        }\r\n        setRejectLoading(false);\r\n    }\r\n\r\n    const addBlacklistOnClickHandle = async (event) => {\r\n        setBlacklistLoading(true);\r\n        try {\r\n\r\n            await deleteVehicle(Number(content.vehicleId));\r\n            await deleteReportListItem(Number(content.vehicleId));\r\n            await deleteEntranceExitLog(Number(content.vehicleId));\r\n            if (parkAreas.some((area) => Number(area.vehicleId) === Number(content.vehicleId) && area.full)) {\r\n                const areaToUpdate = parkAreas.find((area) => Number(area.vehicleId) === Number(content.vehicleId) && area.full)\r\n                await updateParkArea(Number(areaToUpdate.id), { vehicleId: 0, full: false })\r\n            }\r\n            await createBlacklistItem({\r\n                parkingId: Number(content.parkingId),\r\n                licensePlate: vehicles.find((vehicle) => Number(vehicle.id) === Number(content.vehicleId)).licensePlate\r\n            })\r\n        } catch (err) {\r\n            console.log(err.toString());\r\n        }\r\n        updateReports();\r\n        setBlacklistLoading(false);\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Content >\r\n                <Card.Header textAlign=\"center\">{vehicles.find((vehicle) => Number(vehicle.id) === Number(content.vehicleId)).licensePlate}</Card.Header>\r\n                <Divider />\r\n                <Card.Description textAlign=\"center\">\r\n                    <WordBreaker>Parking name : <strong>{parkings.find((parking) => Number(parking.id) === Number(content.parkingId)).name}</strong></WordBreaker>\r\n                    <WordBreaker>Reported By : <strong>{employees.find((employee) => Number(employee.id) === Number(content.employeeId)).fullName}</strong></WordBreaker>\r\n                    <WordBreaker>Report Reason : <strong style={{ color: \"red\" }} >{content.reportReason}</strong></WordBreaker>\r\n                    <WordBreaker>Report Time <br />\r\n                        <DateFormatter date={new Date(content.date)} />\r\n                    </WordBreaker>\r\n                </Card.Description>\r\n                <Card.Content extra textAlign=\"center\">\r\n                    <Button.Group>\r\n                        <Button id={content.id} animated=\"fade\" basic positive onClick={rejectOnClickHandle} loading={rejectLoading}>\r\n                            <Button.Content visible>Reject</Button.Content>\r\n                            <Button.Content hidden><Icon name=\"thumbs up outline\" /></Button.Content>\r\n                        </Button>\r\n                        <Button id={content.id} animated=\"fade\" basic negative onClick={addBlacklistOnClickHandle} loading={blacklistLoading}>\r\n                            <Button.Content visible>Add Blacklist</Button.Content>\r\n                            <Button.Content hidden><Icon name=\"times\" /></Button.Content>\r\n                        </Button>\r\n                    </Button.Group>\r\n                </Card.Content>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ParkingOwnerReportCard\r\n","import React from 'react'\r\nimport { Card, Divider } from 'semantic-ui-react'\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles'\r\nimport DateFormatter from '../../../utils/DateFormatter';\r\n\r\nconst ParkingOwnerFeedbackCard = ({ content, users, parkings, feedbacks }) => {\r\n    return (\r\n        <Card>\r\n            <Card.Content >\r\n                <Card.Header textAlign=\"center\">Feedback from user with ID : <strong>{content.userId}</strong></Card.Header>\r\n                <Divider />\r\n                <Card.Description textAlign=\"center\">\r\n                    \r\n                    <WordBreaker>Feedback ID : <strong>{content.id}</strong></WordBreaker>\r\n                    <WordBreaker>Feedback Date: <>\r\n                    <DateFormatter date={new Date(content.feedbackLeft)}></DateFormatter>\r\n                                    </></WordBreaker>\r\n                    <WordBreaker>Feedback: <strong>{content.feedback}</strong></WordBreaker>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ParkingOwnerFeedbackCard\r\n","import React from 'react'\r\nimport { Card, Divider } from 'semantic-ui-react'\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles'\r\n\r\nconst ParkingOwnerVehicleCard = ({ content, users, parkings }) => {\r\n    return (\r\n        <Card>\r\n            <Card.Content >\r\n                <Card.Header textAlign=\"center\">\r\n                    {content.licensePlate}\r\n                    <h4>{content.vehicleType}</h4>\r\n                </Card.Header>\r\n                <Divider />\r\n                <Card.Description textAlign=\"center\">\r\n                    <WordBreaker>Parking name : <strong>{parkings.find(parking => Number(parking.id) === Number(content.parkingId)).name}</strong></WordBreaker>\r\n                    <WordBreaker>Vehicle ID : <strong>{content.id}</strong></WordBreaker>\r\n                    <WordBreaker>User ID : <strong>{content.userId}</strong></WordBreaker>\r\n                    <WordBreaker>User Name : <strong>{users.find(user => Number(user.id) === Number(content.userId)).fullName}</strong></WordBreaker>\r\n                    <WordBreaker>Phone : <strong>{users.find(user => Number(user.id) === Number(content.userId)).phone}</strong></WordBreaker>\r\n                </Card.Description>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ParkingOwnerVehicleCard","import React, { useState } from \"react\";\r\nimport { Button, Card, Divider, Header, Icon, Modal } from \"semantic-ui-react\";\r\nimport {\r\n  deleteEntranceExitLog,\r\n  deleteReportListItem,\r\n  deleteVehicle,\r\n  updateParkArea,\r\n} from \"../../../backend_service/RestApiHandler\";\r\n\r\nconst UserVehicleCard = ({\r\n  content,\r\n  parkings,\r\n  updateVehicles,\r\n  parkAreas,\r\n  setListedVehicleId,\r\n  setListLogs,\r\n  setListReports,\r\n}) => {\r\n  const parkingName = parkings.find(\r\n    (parking) => Number(parking.id) === Number(content.parkingId)\r\n  ).name;\r\n  const [deleteCarLoading, setDeleteCarLoading] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const listLogClickHandler = (event, { id }) => {\r\n    setListedVehicleId(id);\r\n    setListLogs(true);\r\n  };\r\n\r\n  const listReportsClickHandler = (event, { id }) => {\r\n    setListedVehicleId(id);\r\n    setListReports(true);\r\n  };\r\n\r\n  const deleteCarClickHandler = async (event, { id }) => {\r\n    setDeleteCarLoading(true);\r\n    try {\r\n      await deleteVehicle(id);\r\n      await deleteReportListItem(Number(id));\r\n      await deleteEntranceExitLog(Number(id));\r\n      if (\r\n        parkAreas.some(\r\n          (area) => Number(area.vehicleId) === Number(id) && area.full\r\n        )\r\n      ) {\r\n        const areaToUpdate = parkAreas.find(\r\n          (area) => Number(area.vehicleId) === Number(id) && area.full\r\n        );\r\n        await updateParkArea(Number(areaToUpdate.id), {\r\n          vehicleId: 0,\r\n          full: false,\r\n        });\r\n      }\r\n    } catch (error) {}\r\n    setDeleteCarLoading(false);\r\n    updateVehicles();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Content>\r\n          <Card.Header textAlign=\"center\">{content.licensePlate}</Card.Header>\r\n          <Divider />\r\n          <Card.Description textAlign=\"center\">\r\n            Parking name <br /> <strong>{parkingName.toUpperCase()}</strong>\r\n          </Card.Description>\r\n          <Divider />\r\n          <Card.Description textAlign=\"center\">\r\n            Vehicle Type: <br /> {content.vehicleType}\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra textAlign=\"center\">\r\n          <Button.Group>\r\n            <Button\r\n              id={content.id}\r\n              animated=\"fade\"\r\n              basic\r\n              color=\"green\"\r\n              onClick={listLogClickHandler}\r\n            >\r\n              <Button.Content visible>List Logs</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"list\" />\r\n              </Button.Content>\r\n            </Button>\r\n            <Button\r\n              id={content.id}\r\n              animated=\"fade\"\r\n              basic\r\n              color=\"blue\"\r\n              onClick={listReportsClickHandler}\r\n            >\r\n              <Button.Content visible>List Reports</Button.Content>\r\n              <Button.Content hidden>\r\n                <Icon name=\"list\" />\r\n              </Button.Content>\r\n            </Button>\r\n          </Button.Group>\r\n          <Button\r\n            animated=\"fade\"\r\n            basic\r\n            color=\"red\"\r\n            onClick={() => setModalOpen(true)}\r\n          >\r\n            <Button.Content visible>Delete Car</Button.Content>\r\n            <Button.Content hidden>\r\n              <Icon name=\"trash alternate\" />\r\n            </Button.Content>\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n      <Modal\r\n        basic\r\n        dimmer=\"blurring\"\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n      >\r\n        <Header icon>\r\n          <Icon name=\"car\" /> Delete this car?\r\n        </Header>\r\n        <Modal.Actions>\r\n          <Button negative onClick={() => setModalOpen(false)}>\r\n            No\r\n          </Button>\r\n          <Button\r\n            id={content.id}\r\n            positive\r\n            onClick={deleteCarClickHandler}\r\n            loading={deleteCarLoading}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserVehicleCard;\r\n","import React from 'react'\r\nimport { Card, Divider } from 'semantic-ui-react'\r\nimport DateFormatter from '../../../utils/DateFormatter';\r\nimport { WordBreaker } from '../ProfileCard/ProfileCard.styles'\r\n\r\nconst UserVehicleReportCard = ({ content, vehicles, parkings, employees }) => {\r\n    return (\r\n        <Card>\r\n            <div style={{ border: \"5px solid\", borderColor: content.active ? \"greenyellow\" : \"red\" }}>\r\n                <Card.Content >\r\n                    <Card.Header textAlign=\"center\">{vehicles.find((vehicle) => Number(vehicle.id) === Number(content.vehicleId)).licensePlate}</Card.Header>\r\n                    <Divider />\r\n                    <Card.Description textAlign=\"center\">\r\n                        <WordBreaker>Parking name : <strong>{parkings.find((parking) => Number(parking.id) === Number(content.parkingId)).name.toUpperCase()}</strong></WordBreaker>\r\n                        <WordBreaker>Reported By : <strong>{employees.find((employee) => Number(employee.id) === Number(content.employeeId)).fullName}</strong></WordBreaker>\r\n                        <WordBreaker>Report Reason : <strong style={{ color: \"red\" }}>{content.reportReason}</strong></WordBreaker>\r\n                        <WordBreaker>Report Time <br />\r\n                            <DateFormatter date={new Date(content.date)} />\r\n                        </WordBreaker>\r\n                        <WordBreaker>Parking Spot Number : <strong>{content.id}</strong></WordBreaker>\r\n                        <WordBreaker>Status : <strong>{content.active ? \"Active\" : \"Forgiven\"}</strong></WordBreaker>\r\n                    </Card.Description>\r\n                </Card.Content>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserVehicleReportCard","import React from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport AddingVehicleCard from '../CardComponents/AddingVehicleCard/AddingVehicleCard'\r\nimport BlacklistCard from '../CardComponents/BlacklistCard/BlacklistCard'\r\nimport EmployeeReportCard from '../CardComponents/EmployeeReportCard/EmployeeReportCard'\r\nimport EmployeeRequestCard from '../CardComponents/EmployeeRequestCard/EmployeeRequestCard'\r\nimport LogCard from '../CardComponents/LogCard/LogCard'\r\nimport ParkAreaCard from '../CardComponents/ParkAreaCard/ParkAreaCard'\r\nimport ParkingOwnerReportCard from '../CardComponents/ParkingOwnerReportCard/ParkingOwnerReportCard'\r\nimport ParkingOwnerFeedbackCard from '../CardComponents/FeedbackCard/ParkingOwnerFeedbackCard'\r\nimport ParkingOwnerVehicleCard from '../CardComponents/ParkingOwnerVehicleCard/ParkingOwnerVehicleCard'\r\nimport UserVehicleCard from '../CardComponents/UserVehicleCard/UserVehicleCard'\r\nimport UserVehicleReportCard from '../CardComponents/UserVehicleReportCard/UserVehicleReportCard.js'\r\n\r\nconst Contents = ({\r\n    vehicles,\r\n    contents,\r\n    getContent,\r\n    parkings,\r\n    parkAreas,\r\n    updateVehicles,\r\n    setListedVehicleId,\r\n    setListLogs,\r\n    setListReports,\r\n    employees,\r\n    setCarError,\r\n    selectedCar,\r\n    allLogs,\r\n    reports,\r\n    updateReports,\r\n    deleteFeedback,\r\n    blacklist,\r\n    updateEmployees,\r\n    users,\r\n    updateBlacklist\r\n}) => {\r\n    contents.sort((content1, content2) => { return Number(content1.id) - Number(content2.id) })\r\n    return (\r\n        <Grid stackable>\r\n            {\r\n                getContent === 'UserVehicleCard' ?\r\n                    <Grid.Column width=\"4\">\r\n                        <AddingVehicleCard\r\n                            vehicles={contents}\r\n                            parkings={parkings}\r\n                            updateVehicles={updateVehicles}\r\n                            blacklist={blacklist}\r\n                        />\r\n                    </Grid.Column> : null\r\n            }\r\n            {\r\n                contents.map((content, index) =>\r\n                    <Grid.Column width=\"4\" key={index}>\r\n                        {getContent === 'BlacklistCard' ?\r\n                            <BlacklistCard\r\n                                content={content}\r\n                                vehicles={vehicles}\r\n                                updateBlacklist={updateBlacklist}\r\n                            />\r\n                            : getContent === 'EmployeeReportCard' ?\r\n                                <EmployeeReportCard\r\n                                    content={content}\r\n                                    vehicles={vehicles}\r\n                                    parkings={parkings}\r\n                                    reports={reports}\r\n                                    updateReports={updateReports}\r\n                                />\r\n                                : getContent === 'EmployeeRequestCard' ?\r\n                                    <EmployeeRequestCard\r\n                                        content={content}\r\n                                        updateEmployees={updateEmployees}\r\n                                    />\r\n                                    : getContent === 'LogCard' ?\r\n                                        <LogCard\r\n                                            content={content}\r\n                                            vehicles={vehicles}\r\n                                            parkings={parkings}\r\n                                        />\r\n                                        : getContent === 'ParkAreaCard' ?\r\n                                            <ParkAreaCard\r\n                                                content={content}\r\n                                                allLogs={allLogs}\r\n                                                selectedCar={selectedCar}\r\n                                                vehicles={vehicles}\r\n                                                updateVehicles={updateVehicles}\r\n                                                index={index}\r\n                                                setCarError={setCarError}\r\n                                            />\r\n                                            : getContent === 'ParkingOwnerReportCard' ?\r\n                                                <ParkingOwnerReportCard\r\n                                                    content={content}\r\n                                                    vehicles={vehicles}\r\n                                                    parkings={parkings}\r\n                                                    employees={employees}\r\n                                                    updateReports={updateReports}\r\n                                                    parkAreas={parkAreas}\r\n                                                />\r\n                                                : getContent === 'ParkingOwnerFeedbackCard' ?\r\n                                                <ParkingOwnerFeedbackCard\r\n                                                    content={content}\r\n                                                    users={users}\r\n                                                    deleteFeedback={deleteFeedback}\r\n                                                />\r\n                                                : getContent === 'ParkingOwnerVehicleCard' ?\r\n                                                    <ParkingOwnerVehicleCard\r\n                                                        content={content}\r\n                                                        parkings={parkings}\r\n                                                        users={users}\r\n                                                    />\r\n                                                    : getContent === 'UserVehicleCard' ?\r\n                                                        <UserVehicleCard\r\n                                                            content={content}\r\n                                                            parkAreas={parkAreas}\r\n                                                            parkings={parkings}\r\n                                                            updateVehicles={updateVehicles}\r\n                                                            setListedVehicleId={setListedVehicleId}\r\n                                                            setListLogs={setListLogs}\r\n                                                            setListReports={setListReports}\r\n                                                        />\r\n                                                        : getContent === 'UserVehicleReportCard' ?\r\n                                                            <UserVehicleReportCard\r\n                                                                content={content}\r\n                                                                vehicles={vehicles}\r\n                                                                parkings={parkings}\r\n                                                                employees={employees}\r\n                                                            />\r\n                                                            : null\r\n                        }\r\n                    </Grid.Column>\r\n                )\r\n            }\r\n        </Grid >\r\n    )\r\n}\r\n\r\nexport default Contents\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding: 3em;\r\n    width:90%;\r\n`\r\n\r\nexport const Logo = styled.img`\r\n    border-radius: 50%;\r\n    height:50px;\r\n    width:50px;\r\n`","import React from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\nimport { Wrapper } from \"./Header.styles\";\r\n\r\nconst Header = ({ menuItems, activeMenu, handleHeaderOnClick }) => {\r\n  return (\r\n    <Wrapper>\r\n      <Menu\r\n        inverted\r\n        size=\"huge\"\r\n        widths={menuItems.length + 1}\r\n        pointing\r\n        stackable\r\n      >\r\n        {menuItems.map((item, index) => (\r\n          <Menu.Item\r\n            name={item}\r\n            key={index}\r\n            onClick={handleHeaderOnClick}\r\n            active={activeMenu === item ? true : false}\r\n            color={activeMenu === item ? \"blue\" : \"black\"}\r\n          />\r\n        ))}{\" \"}\r\n      </Menu>{\" \"}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const menuItems = {\r\n    user: ['Your Vehicles', 'Book Parking', 'Feedback'],\r\n    employee: ['Report A Car', 'Entrance Exit Log'],\r\n    parkingOwner: ['Entrance Exit Log', 'Report List', 'List Parking Spot', 'List Vehicles','Feedbacks'],\r\n}\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Input = styled.input`\r\n    margin-top:1%;\r\n    margin-bottom: 1%;\r\n    padding: 5px;\r\n    border-radius:5px;\r\n    border: 2px solid blue;\r\n`;","import React from 'react'\r\nimport { Input } from './SearchBar.styles'\r\n\r\nconst SearchBar = ({ userInput, onChange, placeholder }) => {\r\n    return (\r\n        <Input data-testid=\"input\" value={userInput} onChange={onChange} placeholder={placeholder} />\r\n    )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport { Button, Icon } from 'semantic-ui-react'\r\n\r\nconst Logout = ({ handleOnClick }) => {\r\n    return (\r\n        <Button data-testid=\"logout\" animated fluid negative onClick={handleOnClick}>\r\n            <Button.Content visible>Logout <Icon name=\"sign out\" /></Button.Content>\r\n            <Button.Content hidden><Icon name=\"arrow right\" /></Button.Content>\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default Logout\r\n","import React, { useContext } from \"react\";\r\nimport { Container, Divider, Grid, Icon } from \"semantic-ui-react\";\r\nimport { WordBreaker, Wrapper } from \"./ProfileCard.styles\";\r\n\r\nimport SessionContext from \"../../../utils/SessionContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logout from \"../../Logout/Logout\";\r\nimport DateFormatter from \"../../../utils/DateFormatter\";\r\n\r\nconst ProfileCard = ({ person }) => {\r\n  const { setUser, setAuthenticated } = useContext(SessionContext);\r\n  const history = useHistory();\r\n\r\n  const handleOnClick = () => {\r\n    setAuthenticated(\"\");\r\n    setUser({});\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Container textAlign=\"center\">Welcome</Container>\r\n      <br />\r\n      <Divider />\r\n      <Grid>\r\n        <Container textAlign=\"center\">\r\n          Name <Icon name=\"user\" />\r\n        </Container>\r\n        <WordBreaker>{person.fullname}</WordBreaker>\r\n      </Grid>\r\n      <Divider />\r\n      <Grid>\r\n        <Container textAlign=\"center\">\r\n          Phone <Icon name=\"phone\" />\r\n        </Container>\r\n        <WordBreaker>{person.phone}</WordBreaker>\r\n      </Grid>\r\n      <Divider />\r\n      <Grid>\r\n        {person.registrationDate ? (\r\n          <>\r\n            <Container textAlign=\"center\">\r\n              Registration Date <Icon name=\"calendar alternate outline\" />\r\n            </Container>\r\n            <WordBreaker>\r\n              <DateFormatter date={person.registrationDate} />\r\n            </WordBreaker>\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n      <Divider />\r\n      <Logout handleOnClick={handleOnClick} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding:0%;\r\n    padding-bottom:60px;\r\n`\r\n\r\nexport const ContainerFields = styled.div`\r\n    margin-top:0.5%;\r\n    margin-left:0.5%;\r\n    background-color: white;\r\n    border-radius: 15px;\r\n    width: 68%;\r\n    padding: 15px;\r\n`\r\n","import React, { useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  TextArea,\r\n  Message,\r\n  Modal,\r\n} from \"semantic-ui-react\";\r\nimport SessionContext from \"../../../utils/SessionContext\";\r\nimport { createFeedback } from \"../../../backend_service/RestApiHandler\";\r\n//import { getCurrentDate } from '../../DateFormatter/CurrentDate';\r\n\r\nconst FeedbackCard = ({ content, updateFeedbacks }) => {\r\n  const { user } = useContext(SessionContext);\r\n  const [reason, setReason] = useState(\"\");\r\n  const [success, setSuccess] = useState(false);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const handleReasonChange = (event, { value }) => {\r\n    if (\r\n      (/^[a-zA-Z0-9., ]+$/.test(value) || value === \"\") &&\r\n      value.length < 50\r\n    ) {\r\n      setReason(value);\r\n    }\r\n  };\r\n\r\n  const reportCarOnClickHandle = async () => {\r\n    if (\r\n      !/^[.,0123456789 ]+$/.test(reason) &&\r\n      !(reason.trim().replace(/\\s\\s+/g, \" \").length < 5)\r\n    ) {\r\n      setSuccess(true);\r\n      setModalOpen(true);\r\n      setTimeout(() => {\r\n        setModalOpen(false);\r\n        setSuccess(false);\r\n      }, 1000);\r\n      try {\r\n        await createFeedback({\r\n          feedback: reason.trim().replace(/\\s\\s+/g, \" \"),\r\n          userId: user.id,\r\n          parkingId: user.parkingId,\r\n        });\r\n        setReason(\"\");\r\n        updateFeedbacks();\r\n      } catch (error) {\r\n        console.log(error.toString());\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Card centered style={{ width: \"50rem\", marginTop: \"2%\"}}>\r\n        <Card.Content>\r\n          <Card.Header textAlign=\"center\">Leave feedback</Card.Header>\r\n          <Divider />\r\n          <Form size=\"big\">\r\n            <Form.Field\r\n              control={TextArea}\r\n              value={reason}\r\n              icon=\"times\"\r\n              iconPosition=\"left\"\r\n              label=\"Comment\"\r\n              placeholder=\"Enter your comment here(min. 5)\"\r\n              onChange={handleReasonChange}\r\n            />\r\n          </Form>\r\n        </Card.Content>\r\n        <Card.Content extra textAlign=\"center\">\r\n          <Button\r\n            animated=\"fade\"\r\n            basic\r\n            color=\"red\"\r\n            onClick={reportCarOnClickHandle}\r\n          >\r\n            <Button.Content visible>Leave comment</Button.Content>\r\n            <Button.Content hidden>\r\n              <Icon name=\"clipboard outline\" />\r\n            </Button.Content>\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n      <Modal\r\n        dimmer=\"blurring\"\r\n        open={modalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n      >\r\n        <Modal.Header>\r\n          {success ? (\r\n            <Message\r\n              positive\r\n              header=\"Your comment was submitted successfully.\"\r\n            />\r\n          ) : null}\r\n        </Modal.Header>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Icon,\r\n  Message,\r\n  Ref,\r\n  Select,\r\n  Sticky,\r\n  Visibility,\r\n} from \"semantic-ui-react\";\r\nimport Contents from \"../../../components/Contents/Contents\";\r\nimport Header from \"../../../components/CardComponents/Sections/Header/Header\";\r\nimport { menuItems } from \"../../../utils/MenuItems\";\r\nimport SearchBar from \"../../../components/CardComponents/Sections/SearchBar/SearchBar\";\r\nimport ProfileCard from \"../../../components/CardComponents/ProfileCard/ProfileCard\";\r\nimport SessionContext from \"../../../utils/SessionContext\";\r\nimport {\r\n  getBlacklist,\r\n  getEmployees,\r\n  getEntranceExitLogs,\r\n  getParkAreas,\r\n  getParkings,\r\n  getReportList,\r\n  getVehicles,\r\n} from \"../../../backend_service/RestApiHandler\";\r\nimport { Wrapper, ContainerFields } from \"../Wrapper\";\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport FeedbackCard from \"../../../components/CardComponents/FeedbackCard/FeedbackCard\";\r\n\r\nconst UserPage = () => {\r\n  const { user } = useContext(SessionContext);\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [allVehicles, setAllVehicles] = useState([]);\r\n  const [parkings, setParkings] = useState([]);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [parkAreas, setParkAreas] = useState([]);\r\n  const [selectedParkingParkAreas, setSelectedParkingParkAreas] = useState([]);\r\n  const [listLogs, setListLogs] = useState(false);\r\n  const [placeholder, setPlaceholder] = useState(\"Select Parking\");\r\n  const [vehicleLogs, setVehicleLogs] = useState([]);\r\n  const [blacklist, setBlacklist] = useState([]);\r\n  const [allLogs, setAllLogs] = useState([]);\r\n  const [listReports, setListReports] = useState(false);\r\n  const [vehicleReports, setVehicleReports] = useState([]);\r\n  const [listedVehicleId, setListedVehicleId] = useState(0);\r\n  const [currentParkId, setCurrentParkId] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [activeMenu, setActiveMenu] = useState(menuItems.user[0]);\r\n  const [selectedCar, setSelectedCar] = useState(\"\");\r\n  const [selectedParking, setSelectedParking] = useState(\"\");\r\n  const [carError, setCarError] = useState(false);\r\n  const [carOptions, setCarOptions] = useState([]);\r\n  const contextRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let { data } = await getVehicles();\r\n        setAllVehicles(data);\r\n        data = data.filter(\r\n          (vehicle) => Number(user.id) === Number(vehicle.userId)\r\n        );\r\n        setVehicles(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n\r\n      try {\r\n        const { data } = await getParkings();\r\n        setParkings(data);\r\n        setSelectedParking(data[0].name);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n\r\n      try {\r\n        const { data } = await getBlacklist();\r\n        setBlacklist(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    init();\r\n  }, [user.id]);\r\n\r\n  useEffect(() => {\r\n    setSelectedCar(\"\");\r\n    const fullAreaVehicles = parkAreas\r\n      .filter((area) => area.full)\r\n      .map((area) => Number(area.vehicleId));\r\n    setCarOptions(\r\n      vehicles\r\n        .filter(\r\n          (vehicle) =>\r\n            Number(vehicle.userId) === Number(user.id) &&\r\n            !fullAreaVehicles.includes(Number(vehicle.id))\r\n        )\r\n        .map((vehicle) => ({\r\n          text: vehicle.licensePlate,\r\n          value: vehicle.licensePlate,\r\n        }))\r\n    );\r\n  }, [parkAreas, vehicles, user.id]);\r\n\r\n  useEffect(() => {\r\n    const getParkAreasBySelectedCar = () => {\r\n      if (\r\n        selectedCar !== \"\" &&\r\n        parkings.length !== 0 &&\r\n        parkAreas.length !== 0\r\n      ) {\r\n        const parkingId = parkings.find(\r\n          (parking) =>\r\n            Number(parking.id) ===\r\n            Number(\r\n              allVehicles.find(\r\n                (vehicle) => vehicle.licensePlate === selectedCar\r\n              ).parkingId\r\n            )\r\n        ).id;\r\n        setCurrentParkId(Number(parkingId));\r\n        setSelectedParkingParkAreas(\r\n          parkAreas.filter(\r\n            (area) => Number(area.parkingId) === Number(parkingId)\r\n          )\r\n        );\r\n        setPlaceholder(\r\n          parkings.find((parking) => Number(parking.id) === Number(parkingId))\r\n            .name\r\n        );\r\n        setSelectedParking(\"\");\r\n      }\r\n    };\r\n    getParkAreasBySelectedCar();\r\n  }, [selectedCar, parkAreas, allVehicles, parkings]);\r\n\r\n  useEffect(() => {\r\n    const getParkAreasBySelectedParking = () => {\r\n      if (\r\n        selectedParking !== \"\" &&\r\n        parkings.length !== 0 &&\r\n        parkAreas.length !== 0\r\n      ) {\r\n        const parkingId = parkings.find(\r\n          (parking) => parking.name === selectedParking\r\n        ).id;\r\n        setCurrentParkId(Number(parkingId));\r\n        setSelectedParkingParkAreas(\r\n          parkAreas.filter(\r\n            (area) => Number(area.parkingId) === Number(parkingId)\r\n          )\r\n        );\r\n        setSelectedCar(\"\");\r\n      }\r\n    };\r\n    getParkAreasBySelectedParking();\r\n  }, [selectedParking, parkAreas, parkings]);\r\n\r\n  useEffect(() => {\r\n    const getListedVehicleLogs = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let { data } = await getEntranceExitLogs();\r\n        setAllLogs(data);\r\n        data = data.filter(\r\n          (log) => Number(log.vehicleId) === Number(listedVehicleId)\r\n        );\r\n        setVehicleLogs(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    const getListedVehicleReports = async () => {\r\n      setLoading(true);\r\n      try {\r\n        let { data } = await getReportList();\r\n        data = data.filter(\r\n          (report) => Number(report.vehicleId) === Number(listedVehicleId)\r\n        );\r\n        setVehicleReports(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n\r\n      try {\r\n        const { data } = await getEmployees();\r\n        setEmployees(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    if (listLogs) getListedVehicleLogs();\r\n    else if (listReports) getListedVehicleReports();\r\n  }, [listLogs, listReports, listedVehicleId]);\r\n\r\n  useEffect(() => {\r\n    const update = async () => {\r\n      setLoading(true);\r\n      if (activeMenu === \"Your Vehicles\") {\r\n        try {\r\n          let { data } = await getVehicles();\r\n          data = data.filter(\r\n            (vehicle) => Number(user.id) === Number(vehicle.userId)\r\n          );\r\n          setVehicles(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"Book Parking\") {\r\n        try {\r\n          const { data } = await getVehicles();\r\n          setAllVehicles(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n        try {\r\n          const { data } = await getParkAreas();\r\n          setSelectedParkingParkAreas(\r\n            data.filter((area) => Number(area.parkingId) === currentParkId)\r\n          );\r\n          setParkAreas(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n        try {\r\n          const { data } = await getEntranceExitLogs();\r\n          setAllLogs(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    update();\r\n  }, [activeMenu, currentParkId, user.id]);\r\n\r\n  const person = {\r\n    fullname: user.fullName,\r\n    phone: \"0\" + user.phone,\r\n    registrationDate: new Date(user.registrationDate),\r\n  };\r\n\r\n  const getFilteredVehicles = () => {\r\n    return vehicles.filter(\r\n      (vehicle) =>\r\n        vehicle.licensePlate.toLowerCase().indexOf(userInput.toLowerCase()) !==\r\n        -1\r\n    );\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const handleHeaderOnClick = (event, { name }) => {\r\n    setActiveMenu(name);\r\n    setListLogs(false);\r\n    setListReports(false);\r\n    setError(\"\");\r\n  };\r\n\r\n  const backOnClickHandler = () => {\r\n    setListReports(false);\r\n    setListLogs(false);\r\n  };\r\n\r\n  const selectCarOnChangeHandler = (event, { value }) => {\r\n    setSelectedCar(value);\r\n    setCarError(false);\r\n  };\r\n\r\n  const selectParkingOnChangeHandler = (event, { value }) => {\r\n    setSelectedParking(value);\r\n  };\r\n\r\n  const updateVehicles = async () => {\r\n    setLoading(true);\r\n    if (activeMenu === \"Your Vehicles\") {\r\n      try {\r\n        let { data } = await getVehicles();\r\n        setAllVehicles(data);\r\n        data = data.filter(\r\n          (vehicle) => Number(user.id) === Number(vehicle.userId)\r\n        );\r\n        setVehicles(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    } else if (activeMenu === \"Book Parking\") {\r\n      try {\r\n        const { data } = await getParkAreas();\r\n        setSelectedParkingParkAreas(\r\n          data.filter((area) => Number(area.parkingId) === currentParkId)\r\n        );\r\n        setParkAreas(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n      try {\r\n        const { data } = await getEntranceExitLogs();\r\n        setAllLogs(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  const parkingOptions = parkings.map((parking) => ({\r\n    text: parking.name,\r\n    value: parking.name,\r\n  }));\r\n  return (\r\n    <>\r\n      <Header\r\n        menuItems={menuItems.user}\r\n        activeMenu={activeMenu}\r\n        handleHeaderOnClick={handleHeaderOnClick}\r\n      />\r\n      <Wrapper>\r\n        <Ref innerRef={contextRef}>\r\n          <Grid stackable>\r\n            <Grid.Column width=\"3\">\r\n              <Sticky context={contextRef}>\r\n                <ProfileCard person={person} />\r\n              </Sticky>\r\n            </Grid.Column>\r\n            <ContainerFields>\r\n            <Grid stackable centered>\r\n            {activeMenu === \"Your Vehicles\" && !listLogs && !listReports ? (\r\n              <SearchBar\r\n                userInput={userInput}\r\n                onChange={handleOnChange}\r\n                placeholder=\"Search by license plate...\"\r\n              />\r\n            ) : activeMenu === \"Your Vehicles\" && (listLogs || listReports) ? (\r\n              <div style={{ marginBottom: \"1%\", marginTop: \"1%\" }}>\r\n                <Button animated primary onClick={backOnClickHandler}>\r\n                  <Button.Content visible>Back</Button.Content>\r\n                  <Button.Content hidden>\r\n                    <Icon name=\"arrow left\" />\r\n                  </Button.Content>\r\n                </Button>\r\n              </div>\r\n            ) : activeMenu === \"Book Parking\" ? (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    marginBottom: \"1%\",\r\n                    marginTop: \"1%\",\r\n                    color: error ? \"red\" : \"\",\r\n                  }}\r\n                >\r\n                  <Form>\r\n                    <Form.Field\r\n                      loading={loading}\r\n                      value={selectedCar}\r\n                      onChange={selectCarOnChangeHandler}\r\n                      required\r\n                      control={Select}\r\n                      options={carOptions}\r\n                      placeholder=\"Choose your car\"\r\n                      search\r\n                      error={carError}\r\n                    />\r\n                  </Form>\r\n                </div>\r\n\r\n                <div style={{ marginBottom: \"1%\", marginTop: \"1%\" }}>\r\n                  <Form.Field\r\n                    loading={loading}\r\n                    value={selectedParking}\r\n                    onChange={selectParkingOnChangeHandler}\r\n                    required\r\n                    control={Select}\r\n                    options={parkingOptions}\r\n                    placeholder={placeholder}\r\n                    search\r\n                  />\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n            <Grid.Column width=\"10\">\r\n              {loading && !error ? (\r\n                <div style={{ marginLeft: \"50%\" }}>\r\n                  <MoonLoader size=\"75px\" color=\"#36D7B7\"></MoonLoader>\r\n                </div>\r\n              ) : error ? (\r\n                <Message negative>{error.toString()}</Message>\r\n              ) : (\r\n                <Visibility>\r\n                  {activeMenu === \"Your Vehicles\" && parkings.length !== 0 ? (\r\n                    listLogs ? (\r\n                      <Contents\r\n                        contents={vehicleLogs}\r\n                        vehicles={vehicles}\r\n                        parkings={parkings}\r\n                        getContent=\"LogCard\"\r\n                      />\r\n                    ) : listReports ? (\r\n                      <Contents\r\n                        contents={vehicleReports}\r\n                        vehicles={vehicles}\r\n                        parkings={parkings}\r\n                        employees={employees}\r\n                        getContent=\"UserVehicleReportCard\"\r\n                      />\r\n                    ) : (\r\n                      <Contents\r\n                        contents={getFilteredVehicles()}\r\n                        parkAreas={parkAreas}\r\n                        parkings={parkings}\r\n                        updateVehicles={updateVehicles}\r\n                        setListLogs={setListLogs}\r\n                        setListReports={setListReports}\r\n                        setListedVehicleId={setListedVehicleId}\r\n                        blacklist={blacklist}\r\n                        getContent=\"UserVehicleCard\"\r\n                      />\r\n                    )\r\n                  ) : activeMenu === \"Book Parking\" ? (\r\n                    <Contents\r\n                      contents={selectedParkingParkAreas}\r\n                      allLogs={allLogs}\r\n                      selectedCar={selectedCar}\r\n                      vehicles={allVehicles}\r\n                      updateVehicles={updateVehicles}\r\n                      setCarError={setCarError}\r\n                      getContent=\"ParkAreaCard\"\r\n                    />\r\n                  ) : activeMenu === \"Feedback\" ? (\r\n                    <FeedbackCard\r\n                      userInput={userInput}\r\n                      onChange={handleOnChange}\r\n                      placeholder=\"TEST\"\r\n                    />\r\n                  ) : null}\r\n                </Visibility>\r\n              )}\r\n            </Grid.Column>\r\n            </ContainerFields>\r\n          </Grid>\r\n        </Ref>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { MoonLoader } from 'react-spinners';\r\nimport { Grid, Message, Ref, Sticky, Visibility } from 'semantic-ui-react';\r\nimport Contents from '../../../components/Contents/Contents';\r\nimport Header from '../../../components/CardComponents/Sections/Header/Header';\r\nimport { menuItems } from '../../../utils/MenuItems';\r\nimport SearchBar from '../../../components/CardComponents/Sections/SearchBar/SearchBar';\r\nimport WelcomeCard from '../../../components/CardComponents/ProfileCard/ProfileCard';\r\nimport SessionContext from '../../../utils/SessionContext';\r\nimport { getEntranceExitLogs, getParkAreas, getParkings, getReportList, getVehicles } from '../../../backend_service/RestApiHandler';\r\nimport { Wrapper } from '../Wrapper';\r\n\r\nconst EmployeePage = () => {\r\n    const { user } = useContext(SessionContext);\r\n    const [activeMenu, setActiveMenu] = useState(menuItems.employee[0]);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [parkAreas, setParkAreas] = useState([]);\r\n    const [vehicles, setVehicles] = useState([]);\r\n    const [reports, setReports] = useState([]);\r\n    const [logs, setLogs] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [parkings, setParkings] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const contextRef = React.createRef();\r\n\r\n    const handleHeaderOnClick = (event, { name }) => {\r\n        setActiveMenu(name);\r\n        setError(\"\");\r\n    }\r\n\r\n    const handleSearhOnChange = (event) => {\r\n        setUserInput(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUserInput(\"\");\r\n    }, [activeMenu])\r\n\r\n    const updateReports = async () => {\r\n        try {\r\n            const { data } = await getReportList();\r\n            setReports(data);\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const init = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const { data } = await getVehicles();\r\n                setVehicles(data);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n\r\n            try {\r\n                const { data } = await getParkings();\r\n                setParkings(data);\r\n            } catch (err) {\r\n                setError(err);\r\n            }\r\n\r\n            if (activeMenu === \"Report A Car\") {\r\n                try {\r\n                    let { data } = await getParkAreas();\r\n                    data.filter((parkArea) => Number(parkArea.parkingId) === Number(user.parkingId));\r\n                    setParkAreas(data);\r\n                } catch (err) {\r\n                    setError(err);\r\n                }\r\n\r\n                try {\r\n                    const { data } = await getReportList();\r\n                    setReports(data);\r\n                } catch (err) {\r\n                    setError(err);\r\n                }\r\n            } else if (activeMenu === \"Entrance Exit Log\") {\r\n                try {\r\n                    const { data } = await getEntranceExitLogs();\r\n                    setLogs(data);\r\n                } catch (err) {\r\n                    setError(err);\r\n                }\r\n            }\r\n            setLoading(false);\r\n        }\r\n        init();\r\n    }, [activeMenu, user.parkingId])\r\n\r\n    const person = {\r\n        fullname: user.fullName,\r\n        phone: \"0\" + user.phone,\r\n        registrationDate: new Date(user.startingDate),\r\n    }\r\n\r\n    const getFilteredCars = () => {\r\n        const filteredVehicles = vehicles.filter((vehicle) => vehicle.licensePlate.toLowerCase().indexOf(userInput.toLowerCase()) !== -1 && Number(vehicle.parkingId) === Number(user.parkingId))\r\n            .map((vehicle) => Number(vehicle.id));\r\n        return parkAreas.filter((area) => filteredVehicles.includes(Number(area.vehicleId)) && area.full);\r\n    }\r\n\r\n    const getFilteredLogs = () => {\r\n        const filteredVehicles = vehicles.filter((vehicle) => vehicle.licensePlate.toLowerCase().indexOf(userInput.toLowerCase()) !== -1 && Number(vehicle.parkingId) === Number(user.parkingId))\r\n            .map((vehicle) => Number(vehicle.id));\r\n        return logs.filter((log) => filteredVehicles.includes(Number(log.vehicleId)));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header menuItems={menuItems.employee} activeMenu={activeMenu} handleHeaderOnClick={handleHeaderOnClick} />\r\n\r\n            <Wrapper>\r\n                <Sticky context={contextRef}>\r\n                    <Grid centered>\r\n                        {!loading ?\r\n                            activeMenu === \"Report A Car\" ?\r\n                                getFilteredCars().length === 0 && userInput === \"\" ?\r\n                                    <Message negative header=\"There is car in Parking Spots.\" />\r\n                                    :\r\n                                    <SearchBar userInput={userInput} onChange={handleSearhOnChange} placeholder=\"Search by license plate...\" />\r\n                                : activeMenu === \"Entrance Exit Log\" ?\r\n                                    getFilteredLogs().length === 0 && userInput === \"\" ?\r\n                                        <Message negative header=\"There is no log.\" />\r\n                                        :\r\n                                        <SearchBar userInput={userInput} onChange={handleSearhOnChange} placeholder=\"Search by license plate...\" />\r\n                                    : null\r\n                            : null\r\n                        }\r\n\r\n                    </Grid>\r\n                </Sticky>\r\n\r\n                <Ref innerRef={contextRef}>\r\n                    <Grid stackable>\r\n                        <Grid.Column width=\"13\">\r\n                            {loading && !error ?\r\n                                <div style={{ marginLeft: \"50%\" }}>\r\n                                    <MoonLoader size=\"75px\" color=\"#36D7B7\"></MoonLoader>\r\n                                </div>\r\n                                : error ? <Message negative>{error.toString()}</Message> :\r\n                                    <Visibility>\r\n                                        {activeMenu === 'Report A Car' ?\r\n                                            <Contents\r\n                                                contents={getFilteredCars()}\r\n                                                vehicles={vehicles}\r\n                                                parkings={parkings}\r\n                                                reports={reports}\r\n                                                updateReports={updateReports}\r\n                                                getContent=\"EmployeeReportCard\"\r\n                                            /> : activeMenu === \"Entrance Exit Log\" ?\r\n                                                <Contents\r\n                                                    contents={getFilteredLogs()}\r\n                                                    parkings={parkings}\r\n                                                    vehicles={vehicles}\r\n                                                    getContent=\"LogCard\"\r\n                                                />\r\n                                                : null\r\n                                        }\r\n                                    </Visibility>\r\n                            }\r\n                        </Grid.Column>\r\n                        <Grid.Column width=\"3\">\r\n                            <Sticky context={contextRef}>\r\n                                <WelcomeCard person={person} />\r\n                            </Sticky>\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </Ref>\r\n            </Wrapper >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmployeePage\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { MoonLoader } from \"react-spinners\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Form,\r\n  Grid,\r\n  Icon,\r\n  Message,\r\n  Ref,\r\n  Sticky,\r\n  Visibility,\r\n} from \"semantic-ui-react\";\r\nimport Contents from \"../../../components/Contents/Contents\";\r\nimport Header from \"../../../components/CardComponents/Sections/Header/Header\";\r\nimport { menuItems } from \"../../../utils/MenuItems\";\r\nimport SearchBar from \"../../../components/CardComponents/Sections/SearchBar/SearchBar\";\r\nimport WelcomeCard from \"../../../components/CardComponents/ProfileCard/ProfileCard\";\r\nimport SessionContext from \"../../../utils/SessionContext\";\r\nimport {\r\n  createParking,\r\n  getBlacklist,\r\n  getEmployees,\r\n  getEntranceExitLogs,\r\n  getParkAreas,\r\n  getParkings,\r\n  getReportList,\r\n  getUsers,\r\n  getVehicles,\r\n  getFeedback,\r\n} from \"../../../backend_service/RestApiHandler\";\r\nimport { ContainerFields, Wrapper } from \"../Wrapper\";\r\n\r\nconst ParkingOwnerPage = () => {\r\n  const { user } = useContext(SessionContext);\r\n  const [activeMenu, setActiveMenu] = useState(menuItems.parkingOwner[0]);\r\n  const [parkingName, setParkingName] = useState(\"\");\r\n  const [parkingNameError, setParkingNameError] = useState(false);\r\n  const [parkAreaCount, setParkAreaCount] = useState(\"\");\r\n  const [parkAreaCountError, setParkAreaCountError] = useState(false);\r\n  const [alreadyExistError, setAlreadyExistError] = useState(false);\r\n  const [success, setSuccess] = useState(false);\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [feedbacks, setFeedbacks] = useState([]);\r\n  const [parkings, setParkings] = useState([]);\r\n  const [currentParkingId, setCurrentParkingId] = useState(0);\r\n  const [employees, setEmployees] = useState([]);\r\n  const [blacklist, setBlacklist] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [parkAreas, setParkAreas] = useState([]);\r\n  const [logs, setLogs] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [createLoading, setCreateLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const contextRef = React.createRef();\r\n\r\n  const handleHeaderOnClick = (event, { name }) => {\r\n    setActiveMenu(name);\r\n    setError(\"\");\r\n  };\r\n\r\n  const person = {\r\n    fullname: user.fullName,\r\n    phone: \"0\" + user.phone,\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUserInput(\"\");\r\n\r\n    const init = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await getParkings();\r\n        if (\r\n          data.some((parking) => Number(parking.ownerId) === Number(user.id))\r\n        ) {\r\n          setCurrentParkingId(\r\n            Number(\r\n              data.find(\r\n                (parking) => Number(parking.ownerId) === Number(user.id)\r\n              ).id\r\n            )\r\n          );\r\n        }\r\n        setParkings(data);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n      if (activeMenu === \"Create Parking\") {\r\n        const { data } = await getParkings();\r\n        if (\r\n          data.some((parking) => Number(parking.ownerId) === Number(user.id))\r\n        ) {\r\n          setActiveMenu(menuItems.parkingOwner[1]);\r\n        }\r\n      } else if (activeMenu === \"Entrance Exit Log\") {\r\n        try {\r\n          const { data } = await getVehicles();\r\n          setVehicles(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n\r\n        try {\r\n          const { data } = await getEntranceExitLogs();\r\n          setLogs(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"Report List\") {\r\n        try {\r\n          const { data } = await getReportList();\r\n          setReports(\r\n            data.filter(\r\n              (report) =>\r\n                report.active && Number(report.parkingId) === currentParkingId\r\n            )\r\n          );\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n\r\n        try {\r\n          let { data } = await getEmployees();\r\n          setEmployees(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n\r\n        try {\r\n          const { data } = await getVehicles();\r\n          setVehicles(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n\r\n        try {\r\n          const { data } = await getParkings();\r\n          if (\r\n            data.some((parking) => Number(parking.ownerId) === Number(user.id))\r\n          ) {\r\n            const parkingId = data.find(\r\n              (parking) => Number(parking.ownerId) === Number(user.id)\r\n            ).id;\r\n            const areas = await getParkAreas();\r\n            setParkAreas(\r\n              areas.data.filter(\r\n                (parkArea) => Number(parkingId) === Number(parkArea.parkingId)\r\n              )\r\n            );\r\n          } else {\r\n            setParkAreas([]);\r\n          }\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"List Parking Spot\") {\r\n        try {\r\n          const { data } = await getParkings();\r\n          if (\r\n            data.some((parking) => Number(parking.ownerId) === Number(user.id))\r\n          ) {\r\n            const parkingId = data.find(\r\n              (parking) => Number(parking.ownerId) === Number(user.id)\r\n            ).id;\r\n            const areas = await getParkAreas();\r\n            setParkAreas(\r\n              areas.data.filter(\r\n                (parkArea) => Number(parkingId) === Number(parkArea.parkingId)\r\n              )\r\n            );\r\n          } else {\r\n            setParkAreas([]);\r\n          }\r\n          try {\r\n            const { data } = await getVehicles();\r\n            setVehicles(data);\r\n          } catch (err) {\r\n            setError(err);\r\n          }\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"Feedbacks\") {\r\n        try {\r\n          const { data } = await getFeedback();\r\n          setFeedbacks(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"Employee Requests\") {\r\n        try {\r\n          const { data } = await getEmployees();\r\n          setEmployees(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"List Vehicles\") {\r\n        try {\r\n          const { data } = await getVehicles();\r\n          setVehicles(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n\r\n        try {\r\n          const { data } = await getUsers();\r\n          setUsers(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      } else if (activeMenu === \"Blacklist\") {\r\n        try {\r\n          const { data } = await getVehicles();\r\n          setVehicles(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n        try {\r\n          const { data } = await getBlacklist();\r\n          setBlacklist(data);\r\n        } catch (err) {\r\n          setError(err);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n    init();\r\n  }, [activeMenu, user.id, currentParkingId]);\r\n\r\n  const updateEmployees = async () => {\r\n    setLoading(true);\r\n    try {\r\n      let { data } = await getEmployees();\r\n      setEmployees(data);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const updateReports = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await getReportList();\r\n      setReports(\r\n        data.filter(\r\n          (report) =>\r\n            report.active && Number(report.parkingId) === currentParkingId\r\n        )\r\n      );\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const getFilteredReports = () => {\r\n    const filteredVehicles = vehicles\r\n      .filter(\r\n        (vehicle) =>\r\n          vehicle.licensePlate\r\n            .toLowerCase()\r\n            .indexOf(userInput.toLowerCase()) !== -1\r\n      )\r\n      .map((vehicle) => Number(vehicle.id));\r\n    return reports.filter((report) =>\r\n      filteredVehicles.includes(Number(report.vehicleId))\r\n    );\r\n  };\r\n\r\n  const updateBlacklist = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await getBlacklist();\r\n      setBlacklist(data);\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const updateParkings = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await getParkings();\r\n      setParkings(data);\r\n      if (data.some((parking) => Number(parking.ownerId) === Number(user.id))) {\r\n        setCurrentParkingId(\r\n          Number(\r\n            data.find((parking) => Number(parking.ownerId) === Number(user.id))\r\n              .id\r\n          )\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleParkAreaCountChange = (event, { value }) => {\r\n    if ((/^[0-9]+$/.test(value) || value === \"\") && Number(value) < 101) {\r\n      setParkAreaCount(value);\r\n      if (alreadyExistError) setAlreadyExistError(false);\r\n      if (parkAreaCountError) setParkAreaCountError(false);\r\n    }\r\n  };\r\n\r\n  const handleParkingNameChange = (event, { value }) => {\r\n    if ((/^[a-zA-Z ]+$/.test(value) || value === \"\") && value.length < 25) {\r\n      setParkingName(value);\r\n      if (alreadyExistError) setAlreadyExistError(false);\r\n      if (parkingNameError) setParkingNameError(false);\r\n    }\r\n  };\r\n\r\n  const handleSearchOnChange = (event) => {\r\n    setUserInput(event.target.value);\r\n  };\r\n\r\n  const createOnClickHandle = async () => {\r\n    setCreateLoading(true);\r\n    if (parkingName.trim().replace(/\\s\\s+/g, \" \").length < 5)\r\n      setParkingNameError(true);\r\n    else if (Number(parkAreaCount) < 1) {\r\n      setParkAreaCountError(true);\r\n    } else if (\r\n      parkings.some((parking) => parking.name === parkingName.toUpperCase())\r\n    ) {\r\n      setAlreadyExistError(true);\r\n    } else {\r\n      setParkingName(\"\");\r\n      setParkAreaCount(\"\");\r\n      try {\r\n        await createParking({\r\n          ownerId: Number(user.id),\r\n          name: parkingName.trim().replace(/\\s\\s+/g, \" \").toUpperCase(),\r\n          parkAreaCount: Number(parkAreaCount),\r\n        });\r\n        setSuccess(true);\r\n        setTimeout(() => {\r\n          updateParkings();\r\n          setActiveMenu(menuItems.parkingOwner[1]);\r\n          setSuccess(false);\r\n        }, 1000);\r\n      } catch (err) {\r\n        setError(err);\r\n      }\r\n    }\r\n    setCreateLoading(false);\r\n  };\r\n\r\n  const getFilteredLogs = () => {\r\n    const filteredVehicles = vehicles\r\n      .filter(\r\n        (vehicle) =>\r\n          Number(vehicle.parkingId) === Number(currentParkingId) &&\r\n          vehicle.licensePlate\r\n            .toLowerCase()\r\n            .indexOf(userInput.toLowerCase()) !== -1\r\n      )\r\n      .map((vehicle) => Number(vehicle.id));\r\n    return logs.filter((log) =>\r\n      filteredVehicles.includes(Number(log.vehicleId))\r\n    );\r\n  };\r\n\r\n  const getFilteredEmployees = () => {\r\n    return employees.filter(\r\n      (employee) =>\r\n        !employee.accepted &&\r\n        Number(employee.parkingId) === Number(currentParkingId) &&\r\n        employee.fullName.toLowerCase().indexOf(userInput.toLowerCase()) !== -1\r\n    );\r\n  };\r\n\r\n  const getFilteredVehicles = () => {\r\n    return vehicles.filter(\r\n      (vehicle) =>\r\n        Number(vehicle.parkingId) === Number(currentParkingId) &&\r\n        vehicle.licensePlate.toLowerCase().indexOf(userInput.toLowerCase()) !==\r\n          -1\r\n    );\r\n  };\r\n\r\n  const getFilteredFeedbacks = () => {\r\n    return feedbacks.filter(\r\n      (feedback) => Number(feedback.id) && feedback.feedback.toLowerCase()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {parkings.some(\r\n        (parking) => Number(parking.ownerId) === Number(user.id)\r\n      ) ? (\r\n        <Header\r\n          menuItems={menuItems.parkingOwner.slice(0, 7)}\r\n          activeMenu={activeMenu}\r\n          handleHeaderOnClick={handleHeaderOnClick}\r\n        />\r\n      ) : (\r\n        <Header\r\n          menuItems={menuItems.parkingOwner}\r\n          activeMenu={activeMenu}\r\n          handleHeaderOnClick={handleHeaderOnClick}\r\n        />\r\n      )}\r\n      <Wrapper>\r\n        <Sticky context={contextRef}>\r\n          <Grid centered>\r\n            {!loading ? (\r\n              activeMenu === \"Employee Requests\" ? (\r\n                getFilteredEmployees().length === 0 && userInput === \"\" ? (\r\n                  <Message positive header=\"There is no new requests\" />\r\n                ) : (\r\n                  <SearchBar\r\n                    userInput={userInput}\r\n                    onChange={handleSearchOnChange}\r\n                    placeholder=\"Search by name...\"\r\n                  />\r\n                )\r\n              ) : activeMenu === \"Entrance Exit Log\" ? (\r\n                getFilteredLogs().length === 0 && userInput === \"\" ? (\r\n                  <Message negative header=\"There is no content\" />\r\n                ) : (\r\n                  <SearchBar\r\n                    userInput={userInput}\r\n                    onChange={handleSearchOnChange}\r\n                    placeholder=\"Search by license plate...\"\r\n                  />\r\n                )\r\n              ) : activeMenu === \"Report List\" ? (\r\n                getFilteredReports().length === 0 && userInput === \"\" ? (\r\n                  <Message negative header=\"There is no content\" />\r\n                ) : (\r\n                  <SearchBar\r\n                    userInput={userInput}\r\n                    onChange={handleSearchOnChange}\r\n                    placeholder=\"Search by license plate...\"\r\n                  />\r\n                )\r\n              ) : activeMenu === \"List Vehicles\" ? (\r\n                getFilteredVehicles().length === 0 && userInput === \"\" ? (\r\n                  <Message positive header=\"There is no content\" />\r\n                ) : (\r\n                  <SearchBar\r\n                    userInput={userInput}\r\n                    onChange={handleSearchOnChange}\r\n                    placeholder=\"Search by license plate...\"\r\n                  />\r\n                )\r\n              ) : null\r\n            ) : null}\r\n          </Grid>\r\n        </Sticky>\r\n\r\n        <Ref innerRef={contextRef}>\r\n          <Grid stackable>\r\n          <Grid.Column width=\"3\">\r\n              <Sticky context={contextRef}>\r\n                {!loading ? <WelcomeCard person={person} /> : null}\r\n              </Sticky>\r\n            </Grid.Column>\r\n            <Grid.Column width=\"13\">\r\n              {loading && !error ? (\r\n                <div style={{ marginLeft: \"50%\" }}>\r\n                  <MoonLoader size=\"75px\" color=\"#36D7B7\"></MoonLoader>\r\n                </div>\r\n              ) : error ? (\r\n                <Message negative>{error.toString()}</Message>\r\n              ) : (\r\n                <Visibility>\r\n                  {activeMenu === \"Create Parking\" ? (\r\n                    <Grid stackable>\r\n                      <Grid.Column width=\"5\" floated=\"left\"></Grid.Column>\r\n                      <Grid.Column floated=\"left\" width=\"5\">\r\n                        <Card>\r\n                          <Card.Content>\r\n                            <Card.Header textAlign=\"center\">\r\n                              <strong>Create your own parking</strong>\r\n                            </Card.Header>\r\n                            <Divider />\r\n                            <Card.Description>\r\n                              <Form>\r\n                                <Form.Input\r\n                                  required\r\n                                  value={parkingName}\r\n                                  label=\"Parking Name\"\r\n                                  placeholder=\"Parking Name (5-24)\"\r\n                                  error={parkingNameError}\r\n                                  onChange={handleParkingNameChange}\r\n                                />\r\n                                <Form.Input\r\n                                  required\r\n                                  value={parkAreaCount}\r\n                                  label=\"Parking Spot Count\"\r\n                                  placeholder=\"max 100\"\r\n                                  error={parkAreaCountError}\r\n                                  onChange={handleParkAreaCountChange}\r\n                                />\r\n                              </Form>\r\n                            </Card.Description>\r\n                          </Card.Content>\r\n                          {success ? (\r\n                            <Message\r\n                              positive\r\n                              header=\"Parking created successfully.\"\r\n                            />\r\n                          ) : alreadyExistError ? (\r\n                            <Message\r\n                              negative\r\n                              header=\"This parking name already exist.\"\r\n                            />\r\n                          ) : null}\r\n                          <Card.Content extra textAlign=\"center\">\r\n                            <Button\r\n                              fluid\r\n                              animated=\"fade\"\r\n                              positive\r\n                              onClick={createOnClickHandle}\r\n                              loading={createLoading}\r\n                            >\r\n                              <Button.Content visible>Create</Button.Content>\r\n                              <Button.Content hidden>\r\n                                <Icon name=\"add\" />\r\n                              </Button.Content>\r\n                            </Button>\r\n                          </Card.Content>\r\n                        </Card>\r\n                      </Grid.Column>\r\n                      <Grid.Column width=\"5\" floated=\"right\"></Grid.Column>\r\n                    </Grid>\r\n                    \r\n                  ) : activeMenu === \"Employee Requests\" ? (\r\n                    <ContainerFields style={{width: \"100%\"}}>\r\n                    <Contents\r\n                      contents={getFilteredEmployees()}\r\n                      updateEmployees={updateEmployees}\r\n                      getContent=\"EmployeeRequestCard\"\r\n                    />\r\n                    </ContainerFields>\r\n                  ) : activeMenu === \"Entrance Exit Log\" ? (\r\n                    <ContainerFields style={{width: \"83%\"}}>\r\n                    <Contents\r\n                      contents={getFilteredLogs()}\r\n                      parkings={parkings}\r\n                      vehicles={vehicles}\r\n                      getContent=\"LogCard\"\r\n                    />\r\n                    </ContainerFields>\r\n                  ) : activeMenu === \"Report List\" ? (\r\n                    <Contents\r\n                      contents={getFilteredReports()}\r\n                      vehicles={vehicles}\r\n                      parkings={parkings}\r\n                      employees={employees}\r\n                      parkAreas={parkAreas}\r\n                      updateReports={updateReports}\r\n                      getContent=\"ParkingOwnerReportCard\"\r\n                    />\r\n                  ) : activeMenu === \"Blacklist\" ? (\r\n                    <Contents\r\n                      contents={blacklist.filter(\r\n                        (item) =>\r\n                          Number(item.parkingId) === Number(currentParkingId)\r\n                      )}\r\n                      vehicles={vehicles}\r\n                      updateBlacklist={updateBlacklist}\r\n                      getContent=\"BlacklistCard\"\r\n                    />\r\n                  ) : activeMenu === \"List Parking Spot\" ? (\r\n                    <ContainerFields style={{width: \"83%\"}}>\r\n                    <Contents\r\n                      contents={parkAreas}\r\n                      vehicles={vehicles}\r\n                      getContent=\"ParkAreaCard\"\r\n                    />\r\n                    </ContainerFields>\r\n                  ) : activeMenu === \"List Vehicles\" &&\r\n                    users.length !== 0 &&\r\n                    getFilteredVehicles().length !== 0 &&\r\n                    parkings.length !== 0 ? (\r\n                      <ContainerFields style={{width: \"83%\"}}>\r\n                    <Contents\r\n                      contents={getFilteredVehicles()}\r\n                      parkings={parkings}\r\n                      users={users}\r\n                      getContent=\"ParkingOwnerVehicleCard\"\r\n                    />\r\n                    </ContainerFields>\r\n                  ) : activeMenu === \"Feedbacks\" ? (\r\n                    <ContainerFields style={{width: \"83%\"}}>\r\n                    <Contents\r\n                      contents={getFilteredFeedbacks()}\r\n                      users={users}\r\n                      feedbacks={feedbacks}\r\n                      getContent=\"ParkingOwnerFeedbackCard\"\r\n                    />\r\n                    </ContainerFields>\r\n                  ) : null}\r\n                </Visibility>\r\n              )}\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Ref>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ParkingOwnerPage;\r\n","import Register from '../layout/pages/Signup/Register';\r\nimport Login from '../layout/pages/Login/Login';\r\nimport UserPage from '../layout/pages/User/UserPage';\r\nimport EmployeePage from '../layout/pages/Employee/EmployeePage';\r\nimport ParkingOwnerPage from '../layout/pages/ParkingOwner/ParkingOwnerPage';\r\n\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: \"/login\",\r\n        exact: true,\r\n        component: () => <Login />,\r\n        isPrivate: false,\r\n        authenticated: ''\r\n    },\r\n    {\r\n        path: '/register',\r\n        exact: true,\r\n        component: () => <Register />,\r\n        isPrivate: false,\r\n        authenticated: ''\r\n    },\r\n    {\r\n        path: '/user',\r\n        exact: true,\r\n        component: () => <UserPage />,\r\n        isPrivate: true,\r\n        authenticated: 'User',\r\n    },\r\n    {\r\n        path: '/employee',\r\n        exact: true,\r\n        component: () => <EmployeePage />,\r\n        isPrivate: true,\r\n        authenticated: 'Employee',\r\n    },\r\n    {\r\n        path: '/parkingowner',\r\n        exact: true,\r\n        component: () => <ParkingOwnerPage />,\r\n        isPrivate: true,\r\n        authenticated: 'ParkingOwner',\r\n    },\r\n]","import { useContext } from 'react';\r\nimport SessionContext from '../utils/SessionContext';\r\n\r\nconst { Route } = require('react-router-dom');\r\n\r\nconst PrivateRoute = ({ children, isAuthenticated, ...rest }) => {\r\n    const { authenticated } = useContext(SessionContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isAuthenticated === authenticated ? (\r\n                    children\r\n                ) : null\r\n            } />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display:inline-block;\r\n    background-color: rgb(232,232,232);\r\n    background-attachment: fixed;\r\n    background-repeat:no-repeat;\r\n    background-size:cover;\r\n    width:100%;\r\n    min-height:100vh;\r\n`","import React, { useState } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport { routes } from '../../config/Router'\r\nimport PrivateRoute from '../../utils/PrivateRoute'\r\nimport SessionContext from '../../utils/SessionContext'\r\nimport { Wrapper } from './Container.styles'\r\n\r\nconst Container = () => {\r\n    const [authenticated, setAuthenticated] = useState('');\r\n    const [user, setUser] = useState({});\r\n\r\n    if (((window.location.pathname === \"/user\" || window.location.pathname === \"/employee\" || window.location.pathname === \"/parkingowner\")\r\n        && authenticated === '') || (!routes.some(route => route.path === window.location.pathname) && window.location.pathname !== \"/register\")) {\r\n        window.location.pathname = \"/login\";\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Router>\r\n                <Switch>\r\n                    <SessionContext.Provider value={{ user, setUser, authenticated, setAuthenticated }}>\r\n                        {\r\n                            routes.map((route, index) =>\r\n                                route.isPrivate ? (\r\n                                    <PrivateRoute\r\n                                        exact={route.exact}\r\n                                        path={route.path}\r\n                                        isAuthenticated={route.authenticated}\r\n                                        authenticated={authenticated}\r\n                                        key={index}\r\n                                    >\r\n                                        {route.component()}\r\n                                    </PrivateRoute>\r\n                                ) : (\r\n                                        < Route exact={route.exact} path={route.path} key={index}>\r\n                                            {route.component()}\r\n                                        </Route>\r\n                                    )\r\n                            )\r\n                        }\r\n                    </SessionContext.Provider>\r\n                </Switch>\r\n            </Router>\r\n        </Wrapper >\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import './App.css';\nimport Container from './components/Container/Container';\nimport 'react-app-polyfill/stable'\nfunction App() {\n  return (\n    <Container \n    />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}